# OSThread.c
.include "macros.inc"

.section .text, "ax"

.balign 4

DefaultSwitchThreadCallback:
/* 0A75AC 800ACB4C 4E800020 */  blr		

glabel __OSThreadInit
/* 0A75B0 800ACB50 7C0802A6 */  mflr	r0
/* 0A75B4 800ACB54 3C608014 */  lis		r3, RunQueue@ha
/* 0A75B8 800ACB58 90010004 */  stw		r0, 4(r1)
/* 0A75BC 800ACB5C 38000002 */  li		r0, 2
/* 0A75C0 800ACB60 38800010 */  li		r4, 0x10
/* 0A75C4 800ACB64 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A75C8 800ACB68 93E10014 */  stw		r31, 0x14(r1)
/* 0A75CC 800ACB6C 93C10010 */  stw		r30, 0x10(r1)
/* 0A75D0 800ACB70 93A1000C */  stw		r29, 0xc(r1)
/* 0A75D4 800ACB74 3BA00000 */  li		r29, 0
/* 0A75D8 800ACB78 93810008 */  stw		r28, 8(r1)
/* 0A75DC 800ACB7C 3B830D38 */  addi	r28, r3, RunQueue@l
/* 0A75E0 800ACB80 3BFC0418 */  addi	r31, r28, 0x418
/* 0A75E4 800ACB84 B01C06E0 */  sth		r0, 0x6e0(r28)
/* 0A75E8 800ACB88 38000001 */  li		r0, 1
/* 0A75EC 800ACB8C 387F02E8 */  addi	r3, r31, 0x2e8
/* 0A75F0 800ACB90 B01C06E2 */  sth		r0, 0x6e2(r28)
/* 0A75F4 800ACB94 3800FFFF */  li		r0, -1
/* 0A75F8 800ACB98 909C06EC */  stw		r4, 0x6ec(r28)
/* 0A75FC 800ACB9C 909C06E8 */  stw		r4, 0x6e8(r28)
/* 0A7600 800ACBA0 93BC06E4 */  stw		r29, 0x6e4(r28)
/* 0A7604 800ACBA4 901C06F0 */  stw		r0, 0x6f0(r28)
/* 0A7608 800ACBA8 93BC0708 */  stw		r29, 0x708(r28)
/* 0A760C 800ACBAC 480000FD */  bl		OSInitThreadQueue
/* 0A7610 800ACBB0 93BC0710 */  stw		r29, 0x710(r28)
/* 0A7614 800ACBB4 3FC08000 */  lis		r30, 0x8000
/* 0A7618 800ACBB8 387F0000 */  addi	r3, r31, 0
/* 0A761C 800ACBBC 93BC070C */  stw		r29, 0x70c(r28)
/* 0A7620 800ACBC0 93FE00D8 */  stw		r31, 0xd8(r30)
/* 0A7624 800ACBC4 4BFFD055 */  bl		OSClearContext
/* 0A7628 800ACBC8 7FE3FB78 */  mr		r3, r31
/* 0A762C 800ACBCC 4BFFCE85 */  bl		OSSetCurrentContext
/* 0A7630 800ACBD0 3C608015 */  lis		r3, _stack_addr@ha
/* 0A7634 800ACBD4 380367B0 */  addi	r0, r3, _stack_addr@l
/* 0A7638 800ACBD8 3C608014 */  lis		r3, _f_sbss2@ha
/* 0A763C 800ACBDC 901C071C */  stw		r0, 0x71c(r28)
/* 0A7640 800ACBE0 380367B0 */  addi	r0, r3, _f_sbss2@l
/* 0A7644 800ACBE4 901C0720 */  stw		r0, 0x720(r28)
/* 0A7648 800ACBE8 3C60DEAE */  lis		r3, 0xdeae
/* 0A764C 800ACBEC 3803BABE */  addi	r0, r3, -17730
/* 0A7650 800ACBF0 807C0720 */  lwz		r3, 0x720(r28)
/* 0A7654 800ACBF4 7FE4FB78 */  mr		r4, r31
/* 0A7658 800ACBF8 90030000 */  stw		r0, 0(r3)
/* 0A765C 800ACBFC 818D8D20 */  lwz		r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 0A7660 800ACC00 807E00E4 */  lwz		r3, 0xe4(r30)
/* 0A7664 800ACC04 7D8803A6 */  mtlr	r12
/* 0A7668 800ACC08 4E800021 */  blrl	
/* 0A766C 800ACC0C 93FE00E4 */  stw		r31, 0xe4(r30)
/* 0A7670 800ACC10 38600000 */  li		r3, 0
/* 0A7674 800ACC14 4800105D */  bl		OSClearStack
/* 0A7678 800ACC18 93AD9170 */  stw		r29, RunQueueBits-_SDA_BASE_(r13)
/* 0A767C 800ACC1C 3BC00000 */  li		r30, 0
/* 0A7680 800ACC20 57C01838 */  slwi	r0, r30, 3
/* 0A7684 800ACC24 93AD9174 */  stw		r29, RunQueueHint-_SDA_BASE_(r13)
/* 0A7688 800ACC28 7FBC0214 */  add		r29, r28, r0
lbl_800ACC2C:
/* 0A768C 800ACC2C 7FA3EB78 */  mr		r3, r29
/* 0A7690 800ACC30 48000079 */  bl		OSInitThreadQueue
/* 0A7694 800ACC34 3BDE0001 */  addi	r30, r30, 1
/* 0A7698 800ACC38 2C1E001F */  cmpwi	r30, 0x1f
/* 0A769C 800ACC3C 3BBD0008 */  addi	r29, r29, 8
/* 0A76A0 800ACC40 4081FFEC */  ble		lbl_800ACC2C
/* 0A76A4 800ACC44 3FC08000 */  lis		r30, 0x8000
/* 0A76A8 800ACC48 387E00DC */  addi	r3, r30, 0xdc
/* 0A76AC 800ACC4C 4800005D */  bl		OSInitThreadQueue
/* 0A76B0 800ACC50 389E00DC */  addi	r4, r30, 0xdc
/* 0A76B4 800ACC54 84640004 */  lwzu	r3, 4(r4)
/* 0A76B8 800ACC58 28030000 */  cmplwi	r3, 0
/* 0A76BC 800ACC5C 4082000C */  bne		lbl_800ACC68
/* 0A76C0 800ACC60 93FE00DC */  stw		r31, 0xdc(r30)
/* 0A76C4 800ACC64 48000008 */  b		lbl_800ACC6C
lbl_800ACC68:
/* 0A76C8 800ACC68 93E302FC */  stw		r31, 0x2fc(r3)
lbl_800ACC6C:
/* 0A76CC 800ACC6C 907F0300 */  stw		r3, 0x300(r31)
/* 0A76D0 800ACC70 3BC00000 */  li		r30, 0
/* 0A76D4 800ACC74 387C0730 */  addi	r3, r28, 0x730
/* 0A76D8 800ACC78 93DF02FC */  stw		r30, 0x2fc(r31)
/* 0A76DC 800ACC7C 93E40000 */  stw		r31, 0(r4)
/* 0A76E0 800ACC80 4BFFCF99 */  bl		OSClearContext
/* 0A76E4 800ACC84 93CD9178 */  stw		r30, Reschedule-_SDA_BASE_(r13)
/* 0A76E8 800ACC88 8001001C */  lwz		r0, 0x1c(r1)
/* 0A76EC 800ACC8C 83E10014 */  lwz		r31, 0x14(r1)
/* 0A76F0 800ACC90 83C10010 */  lwz		r30, 0x10(r1)
/* 0A76F4 800ACC94 83A1000C */  lwz		r29, 0xc(r1)
/* 0A76F8 800ACC98 83810008 */  lwz		r28, 8(r1)
/* 0A76FC 800ACC9C 38210018 */  addi	r1, r1, 0x18
/* 0A7700 800ACCA0 7C0803A6 */  mtlr	r0
/* 0A7704 800ACCA4 4E800020 */  blr		

glabel OSInitThreadQueue
/* 0A7708 800ACCA8 38000000 */  li		r0, 0
/* 0A770C 800ACCAC 90030004 */  stw		r0, 4(r3)
/* 0A7710 800ACCB0 90030000 */  stw		r0, 0(r3)
/* 0A7714 800ACCB4 4E800020 */  blr		

glabel OSGetCurrentThread
/* 0A7718 800ACCB8 3C608000 */  lis		r3, 0x8000
/* 0A771C 800ACCBC 806300E4 */  lwz		r3, 0xe4(r3)
/* 0A7720 800ACCC0 4E800020 */  blr		

glabel OSDisableScheduler
/* 0A7724 800ACCC4 7C0802A6 */  mflr	r0
/* 0A7728 800ACCC8 90010004 */  stw		r0, 4(r1)
/* 0A772C 800ACCCC 9421FFF0 */  stwu	r1, -0x10(r1)
/* 0A7730 800ACCD0 93E1000C */  stw		r31, 0xc(r1)
/* 0A7734 800ACCD4 4BFFDA9D */  bl		OSDisableInterrupts
/* 0A7738 800ACCD8 808D9178 */  lwz		r4, Reschedule-_SDA_BASE_(r13)
/* 0A773C 800ACCDC 38040001 */  addi	r0, r4, 1
/* 0A7740 800ACCE0 900D9178 */  stw		r0, Reschedule-_SDA_BASE_(r13)
/* 0A7744 800ACCE4 7C9F2378 */  mr		r31, r4
/* 0A7748 800ACCE8 4BFFDAB1 */  bl		OSRestoreInterrupts
/* 0A774C 800ACCEC 7FE3FB78 */  mr		r3, r31
/* 0A7750 800ACCF0 80010014 */  lwz		r0, 0x14(r1)
/* 0A7754 800ACCF4 83E1000C */  lwz		r31, 0xc(r1)
/* 0A7758 800ACCF8 38210010 */  addi	r1, r1, 0x10
/* 0A775C 800ACCFC 7C0803A6 */  mtlr	r0
/* 0A7760 800ACD00 4E800020 */  blr		

glabel OSEnableScheduler
/* 0A7764 800ACD04 7C0802A6 */  mflr	r0
/* 0A7768 800ACD08 90010004 */  stw		r0, 4(r1)
/* 0A776C 800ACD0C 9421FFF0 */  stwu	r1, -0x10(r1)
/* 0A7770 800ACD10 93E1000C */  stw		r31, 0xc(r1)
/* 0A7774 800ACD14 4BFFDA5D */  bl		OSDisableInterrupts
/* 0A7778 800ACD18 808D9178 */  lwz		r4, Reschedule-_SDA_BASE_(r13)
/* 0A777C 800ACD1C 3804FFFF */  addi	r0, r4, -1
/* 0A7780 800ACD20 900D9178 */  stw		r0, Reschedule-_SDA_BASE_(r13)
/* 0A7784 800ACD24 7C9F2378 */  mr		r31, r4
/* 0A7788 800ACD28 4BFFDA71 */  bl		OSRestoreInterrupts
/* 0A778C 800ACD2C 7FE3FB78 */  mr		r3, r31
/* 0A7790 800ACD30 80010014 */  lwz		r0, 0x14(r1)
/* 0A7794 800ACD34 83E1000C */  lwz		r31, 0xc(r1)
/* 0A7798 800ACD38 38210010 */  addi	r1, r1, 0x10
/* 0A779C 800ACD3C 7C0803A6 */  mtlr	r0
/* 0A77A0 800ACD40 4E800020 */  blr		

UnsetRun:
/* 0A77A4 800ACD44 808302E0 */  lwz		r4, 0x2e0(r3)
/* 0A77A8 800ACD48 80A302DC */  lwz		r5, 0x2dc(r3)
/* 0A77AC 800ACD4C 28040000 */  cmplwi	r4, 0
/* 0A77B0 800ACD50 80C302E4 */  lwz		r6, 0x2e4(r3)
/* 0A77B4 800ACD54 4082000C */  bne		lbl_800ACD60
/* 0A77B8 800ACD58 90C50004 */  stw		r6, 4(r5)
/* 0A77BC 800ACD5C 48000008 */  b		lbl_800ACD64
lbl_800ACD60:
/* 0A77C0 800ACD60 90C402E4 */  stw		r6, 0x2e4(r4)
lbl_800ACD64:
/* 0A77C4 800ACD64 28060000 */  cmplwi	r6, 0
/* 0A77C8 800ACD68 4082000C */  bne		lbl_800ACD74
/* 0A77CC 800ACD6C 90850000 */  stw		r4, 0(r5)
/* 0A77D0 800ACD70 48000008 */  b		lbl_800ACD78
lbl_800ACD74:
/* 0A77D4 800ACD74 908602E0 */  stw		r4, 0x2e0(r6)
lbl_800ACD78:
/* 0A77D8 800ACD78 80050000 */  lwz		r0, 0(r5)
/* 0A77DC 800ACD7C 28000000 */  cmplwi	r0, 0
/* 0A77E0 800ACD80 40820020 */  bne		lbl_800ACDA0
/* 0A77E4 800ACD84 800302D0 */  lwz		r0, 0x2d0(r3)
/* 0A77E8 800ACD88 38800001 */  li		r4, 1
/* 0A77EC 800ACD8C 80AD9170 */  lwz		r5, RunQueueBits-_SDA_BASE_(r13)
/* 0A77F0 800ACD90 2000001F */  subfic	r0, r0, 0x1f
/* 0A77F4 800ACD94 7C800030 */  slw		r0, r4, r0
/* 0A77F8 800ACD98 7CA00078 */  andc	r0, r5, r0
/* 0A77FC 800ACD9C 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
lbl_800ACDA0:
/* 0A7800 800ACDA0 38000000 */  li		r0, 0
/* 0A7804 800ACDA4 900302DC */  stw		r0, 0x2dc(r3)
/* 0A7808 800ACDA8 4E800020 */  blr		

glabel __OSGetEffectivePriority
/* 0A780C 800ACDAC 808302D4 */  lwz		r4, 0x2d4(r3)
/* 0A7810 800ACDB0 80A302F4 */  lwz		r5, 0x2f4(r3)
/* 0A7814 800ACDB4 48000024 */  b		lbl_800ACDD8
lbl_800ACDB8:
/* 0A7818 800ACDB8 80650000 */  lwz		r3, 0(r5)
/* 0A781C 800ACDBC 28030000 */  cmplwi	r3, 0
/* 0A7820 800ACDC0 41820014 */  beq		lbl_800ACDD4
/* 0A7824 800ACDC4 800302D0 */  lwz		r0, 0x2d0(r3)
/* 0A7828 800ACDC8 7C002000 */  cmpw	r0, r4
/* 0A782C 800ACDCC 40800008 */  bge		lbl_800ACDD4
/* 0A7830 800ACDD0 7C040378 */  mr		r4, r0
lbl_800ACDD4:
/* 0A7834 800ACDD4 80A50010 */  lwz		r5, 0x10(r5)
lbl_800ACDD8:
/* 0A7838 800ACDD8 28050000 */  cmplwi	r5, 0
/* 0A783C 800ACDDC 4082FFDC */  bne		lbl_800ACDB8
/* 0A7840 800ACDE0 7C832378 */  mr		r3, r4
/* 0A7844 800ACDE4 4E800020 */  blr		

SetEffectivePriority:
/* 0A7848 800ACDE8 7C0802A6 */  mflr	r0
/* 0A784C 800ACDEC 90010004 */  stw		r0, 4(r1)
/* 0A7850 800ACDF0 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A7854 800ACDF4 93E10014 */  stw		r31, 0x14(r1)
/* 0A7858 800ACDF8 7C7F1B78 */  mr		r31, r3
/* 0A785C 800ACDFC 93C10010 */  stw		r30, 0x10(r1)
/* 0A7860 800ACE00 3BC40000 */  addi	r30, r4, 0
/* 0A7864 800ACE04 A00302C8 */  lhz		r0, 0x2c8(r3)
/* 0A7868 800ACE08 2C000003 */  cmpwi	r0, 3
/* 0A786C 800ACE0C 41820180 */  beq		lbl_800ACF8C
/* 0A7870 800ACE10 40800014 */  bge		lbl_800ACE24
/* 0A7874 800ACE14 2C000001 */  cmpwi	r0, 1
/* 0A7878 800ACE18 41820018 */  beq		lbl_800ACE30
/* 0A787C 800ACE1C 40800164 */  bge		lbl_800ACF80
/* 0A7880 800ACE20 4800016C */  b		lbl_800ACF8C
lbl_800ACE24:
/* 0A7884 800ACE24 2C000005 */  cmpwi	r0, 5
/* 0A7888 800ACE28 40800164 */  bge		lbl_800ACF8C
/* 0A788C 800ACE2C 4800007C */  b		lbl_800ACEA8
lbl_800ACE30:
/* 0A7890 800ACE30 7FE3FB78 */  mr		r3, r31
/* 0A7894 800ACE34 4BFFFF11 */  bl		UnsetRun
/* 0A7898 800ACE38 93DF02D0 */  stw		r30, 0x2d0(r31)
/* 0A789C 800ACE3C 3C608014 */  lis		r3, RunQueue@ha
/* 0A78A0 800ACE40 38030D38 */  addi	r0, r3, RunQueue@l
/* 0A78A4 800ACE44 807F02D0 */  lwz		r3, 0x2d0(r31)
/* 0A78A8 800ACE48 54631838 */  slwi	r3, r3, 3
/* 0A78AC 800ACE4C 7C001A14 */  add		r0, r0, r3
/* 0A78B0 800ACE50 901F02DC */  stw		r0, 0x2dc(r31)
/* 0A78B4 800ACE54 809F02DC */  lwz		r4, 0x2dc(r31)
/* 0A78B8 800ACE58 80640004 */  lwz		r3, 4(r4)
/* 0A78BC 800ACE5C 28030000 */  cmplwi	r3, 0
/* 0A78C0 800ACE60 4082000C */  bne		lbl_800ACE6C
/* 0A78C4 800ACE64 93E40000 */  stw		r31, 0(r4)
/* 0A78C8 800ACE68 48000008 */  b		lbl_800ACE70
lbl_800ACE6C:
/* 0A78CC 800ACE6C 93E302E0 */  stw		r31, 0x2e0(r3)
lbl_800ACE70:
/* 0A78D0 800ACE70 907F02E4 */  stw		r3, 0x2e4(r31)
/* 0A78D4 800ACE74 38000000 */  li		r0, 0
/* 0A78D8 800ACE78 38600001 */  li		r3, 1
/* 0A78DC 800ACE7C 901F02E0 */  stw		r0, 0x2e0(r31)
/* 0A78E0 800ACE80 809F02DC */  lwz		r4, 0x2dc(r31)
/* 0A78E4 800ACE84 93E40004 */  stw		r31, 4(r4)
/* 0A78E8 800ACE88 801F02D0 */  lwz		r0, 0x2d0(r31)
/* 0A78EC 800ACE8C 808D9170 */  lwz		r4, RunQueueBits-_SDA_BASE_(r13)
/* 0A78F0 800ACE90 2000001F */  subfic	r0, r0, 0x1f
/* 0A78F4 800ACE94 7C600030 */  slw		r0, r3, r0
/* 0A78F8 800ACE98 7C800378 */  or		r0, r4, r0
/* 0A78FC 800ACE9C 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7900 800ACEA0 906D9174 */  stw		r3, RunQueueHint-_SDA_BASE_(r13)
/* 0A7904 800ACEA4 480000E8 */  b		lbl_800ACF8C
lbl_800ACEA8:
/* 0A7908 800ACEA8 809F02E0 */  lwz		r4, 0x2e0(r31)
/* 0A790C 800ACEAC 80BF02E4 */  lwz		r5, 0x2e4(r31)
/* 0A7910 800ACEB0 28040000 */  cmplwi	r4, 0
/* 0A7914 800ACEB4 40820010 */  bne		lbl_800ACEC4
/* 0A7918 800ACEB8 807F02DC */  lwz		r3, 0x2dc(r31)
/* 0A791C 800ACEBC 90A30004 */  stw		r5, 4(r3)
/* 0A7920 800ACEC0 48000008 */  b		lbl_800ACEC8
lbl_800ACEC4:
/* 0A7924 800ACEC4 90A402E4 */  stw		r5, 0x2e4(r4)
lbl_800ACEC8:
/* 0A7928 800ACEC8 28050000 */  cmplwi	r5, 0
/* 0A792C 800ACECC 40820010 */  bne		lbl_800ACEDC
/* 0A7930 800ACED0 807F02DC */  lwz		r3, 0x2dc(r31)
/* 0A7934 800ACED4 90830000 */  stw		r4, 0(r3)
/* 0A7938 800ACED8 48000008 */  b		lbl_800ACEE0
lbl_800ACEDC:
/* 0A793C 800ACEDC 908502E0 */  stw		r4, 0x2e0(r5)
lbl_800ACEE0:
/* 0A7940 800ACEE0 93DF02D0 */  stw		r30, 0x2d0(r31)
/* 0A7944 800ACEE4 809F02DC */  lwz		r4, 0x2dc(r31)
/* 0A7948 800ACEE8 80A40000 */  lwz		r5, 0(r4)
/* 0A794C 800ACEEC 48000008 */  b		lbl_800ACEF4
lbl_800ACEF0:
/* 0A7950 800ACEF0 80A502E0 */  lwz		r5, 0x2e0(r5)
lbl_800ACEF4:
/* 0A7954 800ACEF4 28050000 */  cmplwi	r5, 0
/* 0A7958 800ACEF8 41820014 */  beq		lbl_800ACF0C
/* 0A795C 800ACEFC 806502D0 */  lwz		r3, 0x2d0(r5)
/* 0A7960 800ACF00 801F02D0 */  lwz		r0, 0x2d0(r31)
/* 0A7964 800ACF04 7C030000 */  cmpw	r3, r0
/* 0A7968 800ACF08 4081FFE8 */  ble		lbl_800ACEF0
lbl_800ACF0C:
/* 0A796C 800ACF0C 28050000 */  cmplwi	r5, 0
/* 0A7970 800ACF10 40820034 */  bne		lbl_800ACF44
/* 0A7974 800ACF14 80640004 */  lwz		r3, 4(r4)
/* 0A7978 800ACF18 28030000 */  cmplwi	r3, 0
/* 0A797C 800ACF1C 4082000C */  bne		lbl_800ACF28
/* 0A7980 800ACF20 93E40000 */  stw		r31, 0(r4)
/* 0A7984 800ACF24 48000008 */  b		lbl_800ACF2C
lbl_800ACF28:
/* 0A7988 800ACF28 93E302E0 */  stw		r31, 0x2e0(r3)
lbl_800ACF2C:
/* 0A798C 800ACF2C 907F02E4 */  stw		r3, 0x2e4(r31)
/* 0A7990 800ACF30 38000000 */  li		r0, 0
/* 0A7994 800ACF34 901F02E0 */  stw		r0, 0x2e0(r31)
/* 0A7998 800ACF38 807F02DC */  lwz		r3, 0x2dc(r31)
/* 0A799C 800ACF3C 93E30004 */  stw		r31, 4(r3)
/* 0A79A0 800ACF40 4800002C */  b		lbl_800ACF6C
lbl_800ACF44:
/* 0A79A4 800ACF44 90BF02E0 */  stw		r5, 0x2e0(r31)
/* 0A79A8 800ACF48 806502E4 */  lwz		r3, 0x2e4(r5)
/* 0A79AC 800ACF4C 93E502E4 */  stw		r31, 0x2e4(r5)
/* 0A79B0 800ACF50 28030000 */  cmplwi	r3, 0
/* 0A79B4 800ACF54 907F02E4 */  stw		r3, 0x2e4(r31)
/* 0A79B8 800ACF58 40820010 */  bne		lbl_800ACF68
/* 0A79BC 800ACF5C 807F02DC */  lwz		r3, 0x2dc(r31)
/* 0A79C0 800ACF60 93E30000 */  stw		r31, 0(r3)
/* 0A79C4 800ACF64 48000008 */  b		lbl_800ACF6C
lbl_800ACF68:
/* 0A79C8 800ACF68 93E302E0 */  stw		r31, 0x2e0(r3)
lbl_800ACF6C:
/* 0A79CC 800ACF6C 807F02F0 */  lwz		r3, 0x2f0(r31)
/* 0A79D0 800ACF70 28030000 */  cmplwi	r3, 0
/* 0A79D4 800ACF74 41820018 */  beq		lbl_800ACF8C
/* 0A79D8 800ACF78 80630008 */  lwz		r3, 8(r3)
/* 0A79DC 800ACF7C 48000014 */  b		lbl_800ACF90
lbl_800ACF80:
/* 0A79E0 800ACF80 38000001 */  li		r0, 1
/* 0A79E4 800ACF84 900D9174 */  stw		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A79E8 800ACF88 93DF02D0 */  stw		r30, 0x2d0(r31)
lbl_800ACF8C:
/* 0A79EC 800ACF8C 38600000 */  li		r3, 0
lbl_800ACF90:
/* 0A79F0 800ACF90 8001001C */  lwz		r0, 0x1c(r1)
/* 0A79F4 800ACF94 83E10014 */  lwz		r31, 0x14(r1)
/* 0A79F8 800ACF98 83C10010 */  lwz		r30, 0x10(r1)
/* 0A79FC 800ACF9C 38210018 */  addi	r1, r1, 0x18
/* 0A7A00 800ACFA0 7C0803A6 */  mtlr	r0
/* 0A7A04 800ACFA4 4E800020 */  blr		

SelectThread:
/* 0A7A08 800ACFA8 7C0802A6 */  mflr	r0
/* 0A7A0C 800ACFAC 3C808014 */  lis		r4, RunQueue@ha
/* 0A7A10 800ACFB0 90010004 */  stw		r0, 4(r1)
/* 0A7A14 800ACFB4 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A7A18 800ACFB8 93E10014 */  stw		r31, 0x14(r1)
/* 0A7A1C 800ACFBC 3BE40D38 */  addi	r31, r4, RunQueue@l
/* 0A7A20 800ACFC0 93C10010 */  stw		r30, 0x10(r1)
/* 0A7A24 800ACFC4 3BC30000 */  addi	r30, r3, 0
/* 0A7A28 800ACFC8 800D9178 */  lwz		r0, Reschedule-_SDA_BASE_(r13)
/* 0A7A2C 800ACFCC 2C000000 */  cmpwi	r0, 0
/* 0A7A30 800ACFD0 4081000C */  ble		lbl_800ACFDC
/* 0A7A34 800ACFD4 38600000 */  li		r3, 0
/* 0A7A38 800ACFD8 480001E0 */  b		lbl_800AD1B8
lbl_800ACFDC:
/* 0A7A3C 800ACFDC 4BFFCAD1 */  bl		OSGetCurrentContext
/* 0A7A40 800ACFE0 3C808000 */  lis		r4, 0x8000
/* 0A7A44 800ACFE4 80C400E4 */  lwz		r6, 0xe4(r4)
/* 0A7A48 800ACFE8 7C033040 */  cmplw	r3, r6
/* 0A7A4C 800ACFEC 38660000 */  addi	r3, r6, 0
/* 0A7A50 800ACFF0 4182000C */  beq		lbl_800ACFFC
/* 0A7A54 800ACFF4 38600000 */  li		r3, 0
/* 0A7A58 800ACFF8 480001C0 */  b		lbl_800AD1B8
lbl_800ACFFC:
/* 0A7A5C 800ACFFC 28060000 */  cmplwi	r6, 0
/* 0A7A60 800AD000 418200BC */  beq		lbl_800AD0BC
/* 0A7A64 800AD004 A00602C8 */  lhz		r0, 0x2c8(r6)
/* 0A7A68 800AD008 28000002 */  cmplwi	r0, 2
/* 0A7A6C 800AD00C 40820090 */  bne		lbl_800AD09C
/* 0A7A70 800AD010 2C1E0000 */  cmpwi	r30, 0
/* 0A7A74 800AD014 40820020 */  bne		lbl_800AD034
/* 0A7A78 800AD018 808D9170 */  lwz		r4, RunQueueBits-_SDA_BASE_(r13)
/* 0A7A7C 800AD01C 800602D0 */  lwz		r0, 0x2d0(r6)
/* 0A7A80 800AD020 7C840034 */  cntlzw	r4, r4
/* 0A7A84 800AD024 7C002000 */  cmpw	r0, r4
/* 0A7A88 800AD028 4181000C */  bgt		lbl_800AD034
/* 0A7A8C 800AD02C 38600000 */  li		r3, 0
/* 0A7A90 800AD030 48000188 */  b		lbl_800AD1B8
lbl_800AD034:
/* 0A7A94 800AD034 38000001 */  li		r0, 1
/* 0A7A98 800AD038 B00602C8 */  sth		r0, 0x2c8(r6)
/* 0A7A9C 800AD03C 800602D0 */  lwz		r0, 0x2d0(r6)
/* 0A7AA0 800AD040 54001838 */  slwi	r0, r0, 3
/* 0A7AA4 800AD044 7C1F0214 */  add		r0, r31, r0
/* 0A7AA8 800AD048 900602DC */  stw		r0, 0x2dc(r6)
/* 0A7AAC 800AD04C 80A602DC */  lwz		r5, 0x2dc(r6)
/* 0A7AB0 800AD050 80850004 */  lwz		r4, 4(r5)
/* 0A7AB4 800AD054 28040000 */  cmplwi	r4, 0
/* 0A7AB8 800AD058 4082000C */  bne		lbl_800AD064
/* 0A7ABC 800AD05C 90C50000 */  stw		r6, 0(r5)
/* 0A7AC0 800AD060 48000008 */  b		lbl_800AD068
lbl_800AD064:
/* 0A7AC4 800AD064 90C402E0 */  stw		r6, 0x2e0(r4)
lbl_800AD068:
/* 0A7AC8 800AD068 908602E4 */  stw		r4, 0x2e4(r6)
/* 0A7ACC 800AD06C 38000000 */  li		r0, 0
/* 0A7AD0 800AD070 38800001 */  li		r4, 1
/* 0A7AD4 800AD074 900602E0 */  stw		r0, 0x2e0(r6)
/* 0A7AD8 800AD078 80A602DC */  lwz		r5, 0x2dc(r6)
/* 0A7ADC 800AD07C 90C50004 */  stw		r6, 4(r5)
/* 0A7AE0 800AD080 800602D0 */  lwz		r0, 0x2d0(r6)
/* 0A7AE4 800AD084 80AD9170 */  lwz		r5, RunQueueBits-_SDA_BASE_(r13)
/* 0A7AE8 800AD088 2000001F */  subfic	r0, r0, 0x1f
/* 0A7AEC 800AD08C 7C800030 */  slw		r0, r4, r0
/* 0A7AF0 800AD090 7CA00378 */  or		r0, r5, r0
/* 0A7AF4 800AD094 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7AF8 800AD098 908D9174 */  stw		r4, RunQueueHint-_SDA_BASE_(r13)
lbl_800AD09C:
/* 0A7AFC 800AD09C A00601A2 */  lhz		r0, 0x1a2(r6)
/* 0A7B00 800AD0A0 540007BD */  rlwinm.	r0, r0, 0, 0x1e, 0x1e
/* 0A7B04 800AD0A4 40820018 */  bne		lbl_800AD0BC
/* 0A7B08 800AD0A8 4BFFCA11 */  bl		OSSaveContext
/* 0A7B0C 800AD0AC 28030000 */  cmplwi	r3, 0
/* 0A7B10 800AD0B0 4182000C */  beq		lbl_800AD0BC
/* 0A7B14 800AD0B4 38600000 */  li		r3, 0
/* 0A7B18 800AD0B8 48000100 */  b		lbl_800AD1B8
lbl_800AD0BC:
/* 0A7B1C 800AD0BC 800D9170 */  lwz		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7B20 800AD0C0 28000000 */  cmplwi	r0, 0
/* 0A7B24 800AD0C4 40820054 */  bne		lbl_800AD118
/* 0A7B28 800AD0C8 818D8D20 */  lwz		r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 0A7B2C 800AD0CC 3FC08000 */  lis		r30, 0x8000
/* 0A7B30 800AD0D0 807E00E4 */  lwz		r3, 0xe4(r30)
/* 0A7B34 800AD0D4 38800000 */  li		r4, 0
/* 0A7B38 800AD0D8 7D8803A6 */  mtlr	r12
/* 0A7B3C 800AD0DC 4E800021 */  blrl	
/* 0A7B40 800AD0E0 38000000 */  li		r0, 0
/* 0A7B44 800AD0E4 901E00E4 */  stw		r0, 0xe4(r30)
/* 0A7B48 800AD0E8 387F0730 */  addi	r3, r31, 0x730
/* 0A7B4C 800AD0EC 4BFFC965 */  bl		OSSetCurrentContext
lbl_800AD0F0:
/* 0A7B50 800AD0F0 4BFFD695 */  bl		OSEnableInterrupts
lbl_800AD0F4:
/* 0A7B54 800AD0F4 800D9170 */  lwz		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7B58 800AD0F8 28000000 */  cmplwi	r0, 0
/* 0A7B5C 800AD0FC 4182FFF8 */  beq		lbl_800AD0F4
/* 0A7B60 800AD100 4BFFD671 */  bl		OSDisableInterrupts
/* 0A7B64 800AD104 800D9170 */  lwz		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7B68 800AD108 28000000 */  cmplwi	r0, 0
/* 0A7B6C 800AD10C 4182FFE4 */  beq		lbl_800AD0F0
/* 0A7B70 800AD110 387F0730 */  addi	r3, r31, 0x730
/* 0A7B74 800AD114 4BFFCB05 */  bl		OSClearContext
lbl_800AD118:
/* 0A7B78 800AD118 38600000 */  li		r3, 0
/* 0A7B7C 800AD11C 906D9174 */  stw		r3, RunQueueHint-_SDA_BASE_(r13)
/* 0A7B80 800AD120 800D9170 */  lwz		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A7B84 800AD124 7C070034 */  cntlzw	r7, r0
/* 0A7B88 800AD128 54E01838 */  slwi	r0, r7, 3
/* 0A7B8C 800AD12C 7C9F0214 */  add		r4, r31, r0
/* 0A7B90 800AD130 80A40000 */  lwz		r5, 0(r4)
/* 0A7B94 800AD134 80C502E0 */  lwz		r6, 0x2e0(r5)
/* 0A7B98 800AD138 3BC50000 */  addi	r30, r5, 0
/* 0A7B9C 800AD13C 28060000 */  cmplwi	r6, 0
/* 0A7BA0 800AD140 4082000C */  bne		lbl_800AD14C
/* 0A7BA4 800AD144 90640004 */  stw		r3, 4(r4)
/* 0A7BA8 800AD148 48000008 */  b		lbl_800AD150
lbl_800AD14C:
/* 0A7BAC 800AD14C 906602E4 */  stw		r3, 0x2e4(r6)
lbl_800AD150:
/* 0A7BB0 800AD150 90C40000 */  stw		r6, 0(r4)
/* 0A7BB4 800AD154 80040000 */  lwz		r0, 0(r4)
/* 0A7BB8 800AD158 28000000 */  cmplwi	r0, 0
/* 0A7BBC 800AD15C 4082001C */  bne		lbl_800AD178
/* 0A7BC0 800AD160 2007001F */  subfic	r0, r7, 0x1f
/* 0A7BC4 800AD164 808D9170 */  lwz		r4, RunQueueBits-_SDA_BASE_(r13)
/* 0A7BC8 800AD168 38600001 */  li		r3, 1
/* 0A7BCC 800AD16C 7C600030 */  slw		r0, r3, r0
/* 0A7BD0 800AD170 7C800078 */  andc	r0, r4, r0
/* 0A7BD4 800AD174 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
lbl_800AD178:
/* 0A7BD8 800AD178 38000000 */  li		r0, 0
/* 0A7BDC 800AD17C 901E02DC */  stw		r0, 0x2dc(r30)
/* 0A7BE0 800AD180 38000002 */  li		r0, 2
/* 0A7BE4 800AD184 3FE08000 */  lis		r31, 0x8000
/* 0A7BE8 800AD188 B01E02C8 */  sth		r0, 0x2c8(r30)
/* 0A7BEC 800AD18C 7FC4F378 */  mr		r4, r30
/* 0A7BF0 800AD190 818D8D20 */  lwz		r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 0A7BF4 800AD194 807F00E4 */  lwz		r3, 0xe4(r31)
/* 0A7BF8 800AD198 7D8803A6 */  mtlr	r12
/* 0A7BFC 800AD19C 4E800021 */  blrl	
/* 0A7C00 800AD1A0 93DF00E4 */  stw		r30, 0xe4(r31)
/* 0A7C04 800AD1A4 7FC3F378 */  mr		r3, r30
/* 0A7C08 800AD1A8 4BFFC8A9 */  bl		OSSetCurrentContext
/* 0A7C0C 800AD1AC 7FC3F378 */  mr		r3, r30
/* 0A7C10 800AD1B0 4BFFC989 */  bl		OSLoadContext
/* 0A7C14 800AD1B4 7FC3F378 */  mr		r3, r30
lbl_800AD1B8:
/* 0A7C18 800AD1B8 8001001C */  lwz		r0, 0x1c(r1)
/* 0A7C1C 800AD1BC 83E10014 */  lwz		r31, 0x14(r1)
/* 0A7C20 800AD1C0 83C10010 */  lwz		r30, 0x10(r1)
/* 0A7C24 800AD1C4 38210018 */  addi	r1, r1, 0x18
/* 0A7C28 800AD1C8 7C0803A6 */  mtlr	r0
/* 0A7C2C 800AD1CC 4E800020 */  blr		

glabel __OSReschedule
/* 0A7C30 800AD1D0 7C0802A6 */  mflr	r0
/* 0A7C34 800AD1D4 90010004 */  stw		r0, 4(r1)
/* 0A7C38 800AD1D8 9421FFF8 */  stwu	r1, -8(r1)
/* 0A7C3C 800AD1DC 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A7C40 800AD1E0 2C000000 */  cmpwi	r0, 0
/* 0A7C44 800AD1E4 4182000C */  beq		lbl_800AD1F0
/* 0A7C48 800AD1E8 38600000 */  li		r3, 0
/* 0A7C4C 800AD1EC 4BFFFDBD */  bl		SelectThread
lbl_800AD1F0:
/* 0A7C50 800AD1F0 8001000C */  lwz		r0, 0xc(r1)
/* 0A7C54 800AD1F4 38210008 */  addi	r1, r1, 8
/* 0A7C58 800AD1F8 7C0803A6 */  mtlr	r0
/* 0A7C5C 800AD1FC 4E800020 */  blr		

glabel OSCreateThread
/* 0A7C60 800AD200 7C0802A6 */  mflr	r0
/* 0A7C64 800AD204 2C080000 */  cmpwi	r8, 0
/* 0A7C68 800AD208 90010004 */  stw		r0, 4(r1)
/* 0A7C6C 800AD20C 9421FFB0 */  stwu	r1, -0x50(r1)
/* 0A7C70 800AD210 BF61003C */  stmw	r27, 0x3c(r1)
/* 0A7C74 800AD214 3BE30000 */  addi	r31, r3, 0
/* 0A7C78 800AD218 3B650000 */  addi	r27, r5, 0
/* 0A7C7C 800AD21C 3B860000 */  addi	r28, r6, 0
/* 0A7C80 800AD220 3BA70000 */  addi	r29, r7, 0
/* 0A7C84 800AD224 4180000C */  blt		lbl_800AD230
/* 0A7C88 800AD228 2C08001F */  cmpwi	r8, 0x1f
/* 0A7C8C 800AD22C 4081000C */  ble		lbl_800AD238
lbl_800AD230:
/* 0A7C90 800AD230 38600000 */  li		r3, 0
/* 0A7C94 800AD234 480001A0 */  b		lbl_800AD3D4
lbl_800AD238:
/* 0A7C98 800AD238 38C00001 */  li		r6, 1
/* 0A7C9C 800AD23C B0DF02C8 */  sth		r6, 0x2c8(r31)
/* 0A7CA0 800AD240 552007FE */  clrlwi	r0, r9, 0x1f
/* 0A7CA4 800AD244 57870038 */  rlwinm	r7, r28, 0, 0, 0x1c
/* 0A7CA8 800AD248 B01F02CA */  sth		r0, 0x2ca(r31)
/* 0A7CAC 800AD24C 3800FFFF */  li		r0, -1
/* 0A7CB0 800AD250 3BC00000 */  li		r30, 0
/* 0A7CB4 800AD254 911F02D4 */  stw		r8, 0x2d4(r31)
/* 0A7CB8 800AD258 387F0000 */  addi	r3, r31, 0
/* 0A7CBC 800AD25C 38A7FFF8 */  addi	r5, r7, -8
/* 0A7CC0 800AD260 911F02D0 */  stw		r8, 0x2d0(r31)
/* 0A7CC4 800AD264 90DF02CC */  stw		r6, 0x2cc(r31)
/* 0A7CC8 800AD268 901F02D8 */  stw		r0, 0x2d8(r31)
/* 0A7CCC 800AD26C 93DF02F0 */  stw		r30, 0x2f0(r31)
/* 0A7CD0 800AD270 93DF02EC */  stw		r30, 0x2ec(r31)
/* 0A7CD4 800AD274 93DF02E8 */  stw		r30, 0x2e8(r31)
/* 0A7CD8 800AD278 93DF02F8 */  stw		r30, 0x2f8(r31)
/* 0A7CDC 800AD27C 93DF02F4 */  stw		r30, 0x2f4(r31)
/* 0A7CE0 800AD280 93C7FFF8 */  stw		r30, -8(r7)
/* 0A7CE4 800AD284 93C7FFFC */  stw		r30, -4(r7)
/* 0A7CE8 800AD288 4BFFC9B5 */  bl		OSInitContext
/* 0A7CEC 800AD28C 3C60800B */  lis		r3, OSExitThread@ha
/* 0A7CF0 800AD290 3803D3E8 */  addi	r0, r3, OSExitThread@l
/* 0A7CF4 800AD294 901F0084 */  stw		r0, 0x84(r31)
/* 0A7CF8 800AD298 3C60DEAE */  lis		r3, 0xdeae
/* 0A7CFC 800AD29C 7C9DE050 */  subf	r4, r29, r28
/* 0A7D00 800AD2A0 937F000C */  stw		r27, 0xc(r31)
/* 0A7D04 800AD2A4 3803BABE */  addi	r0, r3, -17730
/* 0A7D08 800AD2A8 939F0304 */  stw		r28, 0x304(r31)
/* 0A7D0C 800AD2AC 909F0308 */  stw		r4, 0x308(r31)
/* 0A7D10 800AD2B0 807F0308 */  lwz		r3, 0x308(r31)
/* 0A7D14 800AD2B4 90030000 */  stw		r0, 0(r3)
/* 0A7D18 800AD2B8 93DF030C */  stw		r30, 0x30c(r31)
/* 0A7D1C 800AD2BC 93DF0310 */  stw		r30, 0x310(r31)
/* 0A7D20 800AD2C0 93DF0314 */  stw		r30, 0x314(r31)
/* 0A7D24 800AD2C4 4BFFD4AD */  bl		OSDisableInterrupts
/* 0A7D28 800AD2C8 3C808014 */  lis		r4, __OSErrorTable@ha
/* 0A7D2C 800AD2CC 38840C70 */  addi	r4, r4, __OSErrorTable@l
/* 0A7D30 800AD2D0 80040040 */  lwz		r0, 0x40(r4)
/* 0A7D34 800AD2D4 28000000 */  cmplwi	r0, 0
/* 0A7D38 800AD2D8 418200C4 */  beq		lbl_800AD39C
/* 0A7D3C 800AD2DC 809F019C */  lwz		r4, 0x19c(r31)
/* 0A7D40 800AD2E0 38000004 */  li		r0, 4
/* 0A7D44 800AD2E4 7C0903A6 */  mtctr	r0
/* 0A7D48 800AD2E8 38BF0000 */  addi	r5, r31, 0
/* 0A7D4C 800AD2EC 60800900 */  ori		r0, r4, 0x900
/* 0A7D50 800AD2F0 901F019C */  stw		r0, 0x19c(r31)
/* 0A7D54 800AD2F4 A01F01A2 */  lhz		r0, 0x1a2(r31)
/* 0A7D58 800AD2F8 60000001 */  ori		r0, r0, 1
/* 0A7D5C 800AD2FC B01F01A2 */  sth		r0, 0x1a2(r31)
/* 0A7D60 800AD300 800D8D10 */  lwz		r0, __OSFpscrEnableBits-_SDA_BASE_(r13)
/* 0A7D64 800AD304 54000638 */  rlwinm	r0, r0, 0, 0x18, 0x1c
/* 0A7D68 800AD308 60000004 */  ori		r0, r0, 4
/* 0A7D6C 800AD30C 901F0194 */  stw		r0, 0x194(r31)
lbl_800AD310:
/* 0A7D70 800AD310 3800FFFF */  li		r0, -1
/* 0A7D74 800AD314 90050094 */  stw		r0, 0x94(r5)
/* 0A7D78 800AD318 90050090 */  stw		r0, 0x90(r5)
/* 0A7D7C 800AD31C 900501CC */  stw		r0, 0x1cc(r5)
/* 0A7D80 800AD320 900501C8 */  stw		r0, 0x1c8(r5)
/* 0A7D84 800AD324 9005009C */  stw		r0, 0x9c(r5)
/* 0A7D88 800AD328 90050098 */  stw		r0, 0x98(r5)
/* 0A7D8C 800AD32C 900501D4 */  stw		r0, 0x1d4(r5)
/* 0A7D90 800AD330 900501D0 */  stw		r0, 0x1d0(r5)
/* 0A7D94 800AD334 900500A4 */  stw		r0, 0xa4(r5)
/* 0A7D98 800AD338 900500A0 */  stw		r0, 0xa0(r5)
/* 0A7D9C 800AD33C 900501DC */  stw		r0, 0x1dc(r5)
/* 0A7DA0 800AD340 900501D8 */  stw		r0, 0x1d8(r5)
/* 0A7DA4 800AD344 900500AC */  stw		r0, 0xac(r5)
/* 0A7DA8 800AD348 900500A8 */  stw		r0, 0xa8(r5)
/* 0A7DAC 800AD34C 900501E4 */  stw		r0, 0x1e4(r5)
/* 0A7DB0 800AD350 900501E0 */  stw		r0, 0x1e0(r5)
/* 0A7DB4 800AD354 900500B4 */  stw		r0, 0xb4(r5)
/* 0A7DB8 800AD358 900500B0 */  stw		r0, 0xb0(r5)
/* 0A7DBC 800AD35C 900501EC */  stw		r0, 0x1ec(r5)
/* 0A7DC0 800AD360 900501E8 */  stw		r0, 0x1e8(r5)
/* 0A7DC4 800AD364 900500BC */  stw		r0, 0xbc(r5)
/* 0A7DC8 800AD368 900500B8 */  stw		r0, 0xb8(r5)
/* 0A7DCC 800AD36C 900501F4 */  stw		r0, 0x1f4(r5)
/* 0A7DD0 800AD370 900501F0 */  stw		r0, 0x1f0(r5)
/* 0A7DD4 800AD374 900500C4 */  stw		r0, 0xc4(r5)
/* 0A7DD8 800AD378 900500C0 */  stw		r0, 0xc0(r5)
/* 0A7DDC 800AD37C 900501FC */  stw		r0, 0x1fc(r5)
/* 0A7DE0 800AD380 900501F8 */  stw		r0, 0x1f8(r5)
/* 0A7DE4 800AD384 900500CC */  stw		r0, 0xcc(r5)
/* 0A7DE8 800AD388 900500C8 */  stw		r0, 0xc8(r5)
/* 0A7DEC 800AD38C 90050204 */  stw		r0, 0x204(r5)
/* 0A7DF0 800AD390 90050200 */  stw		r0, 0x200(r5)
/* 0A7DF4 800AD394 38A50040 */  addi	r5, r5, 0x40
/* 0A7DF8 800AD398 4200FF78 */  bdnz	lbl_800AD310
lbl_800AD39C:
/* 0A7DFC 800AD39C 3C808000 */  lis		r4, 0x8000
/* 0A7E00 800AD3A0 38A400DC */  addi	r5, r4, 0xdc
/* 0A7E04 800AD3A4 84C50004 */  lwzu	r6, 4(r5)
/* 0A7E08 800AD3A8 28060000 */  cmplwi	r6, 0
/* 0A7E0C 800AD3AC 4082000C */  bne		lbl_800AD3B8
/* 0A7E10 800AD3B0 93E400DC */  stw		r31, 0xdc(r4)
/* 0A7E14 800AD3B4 48000008 */  b		lbl_800AD3BC
lbl_800AD3B8:
/* 0A7E18 800AD3B8 93E602FC */  stw		r31, 0x2fc(r6)
lbl_800AD3BC:
/* 0A7E1C 800AD3BC 90DF0300 */  stw		r6, 0x300(r31)
/* 0A7E20 800AD3C0 38000000 */  li		r0, 0
/* 0A7E24 800AD3C4 901F02FC */  stw		r0, 0x2fc(r31)
/* 0A7E28 800AD3C8 93E50000 */  stw		r31, 0(r5)
/* 0A7E2C 800AD3CC 4BFFD3CD */  bl		OSRestoreInterrupts
/* 0A7E30 800AD3D0 38600001 */  li		r3, 1
lbl_800AD3D4:
/* 0A7E34 800AD3D4 BB61003C */  lmw		r27, 0x3c(r1)
/* 0A7E38 800AD3D8 80010054 */  lwz		r0, 0x54(r1)
/* 0A7E3C 800AD3DC 38210050 */  addi	r1, r1, 0x50
/* 0A7E40 800AD3E0 7C0803A6 */  mtlr	r0
/* 0A7E44 800AD3E4 4E800020 */  blr		

glabel OSExitThread
/* 0A7E48 800AD3E8 7C0802A6 */  mflr	r0
/* 0A7E4C 800AD3EC 90010004 */  stw		r0, 4(r1)
/* 0A7E50 800AD3F0 9421FFE0 */  stwu	r1, -0x20(r1)
/* 0A7E54 800AD3F4 93E1001C */  stw		r31, 0x1c(r1)
/* 0A7E58 800AD3F8 93C10018 */  stw		r30, 0x18(r1)
/* 0A7E5C 800AD3FC 93A10014 */  stw		r29, 0x14(r1)
/* 0A7E60 800AD400 93810010 */  stw		r28, 0x10(r1)
/* 0A7E64 800AD404 7C7C1B78 */  mr		r28, r3
/* 0A7E68 800AD408 4BFFD369 */  bl		OSDisableInterrupts
/* 0A7E6C 800AD40C 3FE08000 */  lis		r31, 0x8000
/* 0A7E70 800AD410 83DF00E4 */  lwz		r30, 0xe4(r31)
/* 0A7E74 800AD414 3BA30000 */  addi	r29, r3, 0
/* 0A7E78 800AD418 387E0000 */  addi	r3, r30, 0
/* 0A7E7C 800AD41C 4BFFC7FD */  bl		OSClearContext
/* 0A7E80 800AD420 A01E02CA */  lhz		r0, 0x2ca(r30)
/* 0A7E84 800AD424 540007FF */  clrlwi.	r0, r0, 0x1f
/* 0A7E88 800AD428 41820044 */  beq		lbl_800AD46C
/* 0A7E8C 800AD42C 809E02FC */  lwz		r4, 0x2fc(r30)
/* 0A7E90 800AD430 80BE0300 */  lwz		r5, 0x300(r30)
/* 0A7E94 800AD434 28040000 */  cmplwi	r4, 0
/* 0A7E98 800AD438 4082000C */  bne		lbl_800AD444
/* 0A7E9C 800AD43C 90BF00E0 */  stw		r5, 0xe0(r31)
/* 0A7EA0 800AD440 48000008 */  b		lbl_800AD448
lbl_800AD444:
/* 0A7EA4 800AD444 90A40300 */  stw		r5, 0x300(r4)
lbl_800AD448:
/* 0A7EA8 800AD448 28050000 */  cmplwi	r5, 0
/* 0A7EAC 800AD44C 40820010 */  bne		lbl_800AD45C
/* 0A7EB0 800AD450 3C608000 */  lis		r3, 0x8000
/* 0A7EB4 800AD454 908300DC */  stw		r4, 0xdc(r3)
/* 0A7EB8 800AD458 48000008 */  b		lbl_800AD460
lbl_800AD45C:
/* 0A7EBC 800AD45C 908502FC */  stw		r4, 0x2fc(r5)
lbl_800AD460:
/* 0A7EC0 800AD460 38000000 */  li		r0, 0
/* 0A7EC4 800AD464 B01E02C8 */  sth		r0, 0x2c8(r30)
/* 0A7EC8 800AD468 48000010 */  b		lbl_800AD478
lbl_800AD46C:
/* 0A7ECC 800AD46C 38000008 */  li		r0, 8
/* 0A7ED0 800AD470 B01E02C8 */  sth		r0, 0x2c8(r30)
/* 0A7ED4 800AD474 939E02D8 */  stw		r28, 0x2d8(r30)
lbl_800AD478:
/* 0A7ED8 800AD478 7FC3F378 */  mr		r3, r30
/* 0A7EDC 800AD47C 4BFFE055 */  bl		__OSUnlockAllMutex
/* 0A7EE0 800AD480 387E02E8 */  addi	r3, r30, 0x2e8
/* 0A7EE4 800AD484 480006E9 */  bl		OSWakeupThread
/* 0A7EE8 800AD488 38000001 */  li		r0, 1
/* 0A7EEC 800AD48C 900D9174 */  stw		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A7EF0 800AD490 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A7EF4 800AD494 2C000000 */  cmpwi	r0, 0
/* 0A7EF8 800AD498 4182000C */  beq		lbl_800AD4A4
/* 0A7EFC 800AD49C 38600000 */  li		r3, 0
/* 0A7F00 800AD4A0 4BFFFB09 */  bl		SelectThread
lbl_800AD4A4:
/* 0A7F04 800AD4A4 7FA3EB78 */  mr		r3, r29
/* 0A7F08 800AD4A8 4BFFD2F1 */  bl		OSRestoreInterrupts
/* 0A7F0C 800AD4AC 80010024 */  lwz		r0, 0x24(r1)
/* 0A7F10 800AD4B0 83E1001C */  lwz		r31, 0x1c(r1)
/* 0A7F14 800AD4B4 83C10018 */  lwz		r30, 0x18(r1)
/* 0A7F18 800AD4B8 83A10014 */  lwz		r29, 0x14(r1)
/* 0A7F1C 800AD4BC 83810010 */  lwz		r28, 0x10(r1)
/* 0A7F20 800AD4C0 38210020 */  addi	r1, r1, 0x20
/* 0A7F24 800AD4C4 7C0803A6 */  mtlr	r0
/* 0A7F28 800AD4C8 4E800020 */  blr		

glabel OSCancelThread
/* 0A7F2C 800AD4CC 7C0802A6 */  mflr	r0
/* 0A7F30 800AD4D0 90010004 */  stw		r0, 4(r1)
/* 0A7F34 800AD4D4 9421FFE0 */  stwu	r1, -0x20(r1)
/* 0A7F38 800AD4D8 93E1001C */  stw		r31, 0x1c(r1)
/* 0A7F3C 800AD4DC 93C10018 */  stw		r30, 0x18(r1)
/* 0A7F40 800AD4E0 7C7E1B78 */  mr		r30, r3
/* 0A7F44 800AD4E4 93A10014 */  stw		r29, 0x14(r1)
/* 0A7F48 800AD4E8 4BFFD289 */  bl		OSDisableInterrupts
/* 0A7F4C 800AD4EC A01E02C8 */  lhz		r0, 0x2c8(r30)
/* 0A7F50 800AD4F0 3BE30000 */  addi	r31, r3, 0
/* 0A7F54 800AD4F4 2C000003 */  cmpwi	r0, 3
/* 0A7F58 800AD4F8 418200DC */  beq		lbl_800AD5D4
/* 0A7F5C 800AD4FC 40800014 */  bge		lbl_800AD510
/* 0A7F60 800AD500 2C000001 */  cmpwi	r0, 1
/* 0A7F64 800AD504 41820018 */  beq		lbl_800AD51C
/* 0A7F68 800AD508 4080002C */  bge		lbl_800AD534
/* 0A7F6C 800AD50C 480000C8 */  b		lbl_800AD5D4
lbl_800AD510:
/* 0A7F70 800AD510 2C000005 */  cmpwi	r0, 5
/* 0A7F74 800AD514 408000C0 */  bge		lbl_800AD5D4
/* 0A7F78 800AD518 48000028 */  b		lbl_800AD540
lbl_800AD51C:
/* 0A7F7C 800AD51C 801E02CC */  lwz		r0, 0x2cc(r30)
/* 0A7F80 800AD520 2C000000 */  cmpwi	r0, 0
/* 0A7F84 800AD524 418100BC */  bgt		lbl_800AD5E0
/* 0A7F88 800AD528 7FC3F378 */  mr		r3, r30
/* 0A7F8C 800AD52C 4BFFF819 */  bl		UnsetRun
/* 0A7F90 800AD530 480000B0 */  b		lbl_800AD5E0
lbl_800AD534:
/* 0A7F94 800AD534 38000001 */  li		r0, 1
/* 0A7F98 800AD538 900D9174 */  stw		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A7F9C 800AD53C 480000A4 */  b		lbl_800AD5E0
lbl_800AD540:
/* 0A7FA0 800AD540 809E02E0 */  lwz		r4, 0x2e0(r30)
/* 0A7FA4 800AD544 80BE02E4 */  lwz		r5, 0x2e4(r30)
/* 0A7FA8 800AD548 28040000 */  cmplwi	r4, 0
/* 0A7FAC 800AD54C 40820010 */  bne		lbl_800AD55C
/* 0A7FB0 800AD550 807E02DC */  lwz		r3, 0x2dc(r30)
/* 0A7FB4 800AD554 90A30004 */  stw		r5, 4(r3)
/* 0A7FB8 800AD558 48000008 */  b		lbl_800AD560
lbl_800AD55C:
/* 0A7FBC 800AD55C 90A402E4 */  stw		r5, 0x2e4(r4)
lbl_800AD560:
/* 0A7FC0 800AD560 28050000 */  cmplwi	r5, 0
/* 0A7FC4 800AD564 40820010 */  bne		lbl_800AD574
/* 0A7FC8 800AD568 807E02DC */  lwz		r3, 0x2dc(r30)
/* 0A7FCC 800AD56C 90830000 */  stw		r4, 0(r3)
/* 0A7FD0 800AD570 48000008 */  b		lbl_800AD578
lbl_800AD574:
/* 0A7FD4 800AD574 908502E0 */  stw		r4, 0x2e0(r5)
lbl_800AD578:
/* 0A7FD8 800AD578 38000000 */  li		r0, 0
/* 0A7FDC 800AD57C 901E02DC */  stw		r0, 0x2dc(r30)
/* 0A7FE0 800AD580 801E02CC */  lwz		r0, 0x2cc(r30)
/* 0A7FE4 800AD584 2C000000 */  cmpwi	r0, 0
/* 0A7FE8 800AD588 41810058 */  bgt		lbl_800AD5E0
/* 0A7FEC 800AD58C 807E02F0 */  lwz		r3, 0x2f0(r30)
/* 0A7FF0 800AD590 28030000 */  cmplwi	r3, 0
/* 0A7FF4 800AD594 4182004C */  beq		lbl_800AD5E0
/* 0A7FF8 800AD598 83A30008 */  lwz		r29, 8(r3)
lbl_800AD59C:
/* 0A7FFC 800AD59C 801D02CC */  lwz		r0, 0x2cc(r29)
/* 0A8000 800AD5A0 2C000000 */  cmpwi	r0, 0
/* 0A8004 800AD5A4 4181003C */  bgt		lbl_800AD5E0
/* 0A8008 800AD5A8 7FA3EB78 */  mr		r3, r29
/* 0A800C 800AD5AC 4BFFF801 */  bl		__OSGetEffectivePriority
/* 0A8010 800AD5B0 801D02D0 */  lwz		r0, 0x2d0(r29)
/* 0A8014 800AD5B4 38830000 */  addi	r4, r3, 0
/* 0A8018 800AD5B8 7C002000 */  cmpw	r0, r4
/* 0A801C 800AD5BC 41820024 */  beq		lbl_800AD5E0
/* 0A8020 800AD5C0 7FA3EB78 */  mr		r3, r29
/* 0A8024 800AD5C4 4BFFF825 */  bl		SetEffectivePriority
/* 0A8028 800AD5C8 7C7D1B79 */  or.		r29, r3, r3
/* 0A802C 800AD5CC 4082FFD0 */  bne		lbl_800AD59C
/* 0A8030 800AD5D0 48000010 */  b		lbl_800AD5E0
lbl_800AD5D4:
/* 0A8034 800AD5D4 7FE3FB78 */  mr		r3, r31
/* 0A8038 800AD5D8 4BFFD1C1 */  bl		OSRestoreInterrupts
/* 0A803C 800AD5DC 48000090 */  b		lbl_800AD66C
lbl_800AD5E0:
/* 0A8040 800AD5E0 7FC3F378 */  mr		r3, r30
/* 0A8044 800AD5E4 4BFFC635 */  bl		OSClearContext
/* 0A8048 800AD5E8 A01E02CA */  lhz		r0, 0x2ca(r30)
/* 0A804C 800AD5EC 540007FF */  clrlwi.	r0, r0, 0x1f
/* 0A8050 800AD5F0 41820048 */  beq		lbl_800AD638
/* 0A8054 800AD5F4 809E02FC */  lwz		r4, 0x2fc(r30)
/* 0A8058 800AD5F8 80BE0300 */  lwz		r5, 0x300(r30)
/* 0A805C 800AD5FC 28040000 */  cmplwi	r4, 0
/* 0A8060 800AD600 40820010 */  bne		lbl_800AD610
/* 0A8064 800AD604 3C608000 */  lis		r3, 0x8000
/* 0A8068 800AD608 90A300E0 */  stw		r5, 0xe0(r3)
/* 0A806C 800AD60C 48000008 */  b		lbl_800AD614
lbl_800AD610:
/* 0A8070 800AD610 90A40300 */  stw		r5, 0x300(r4)
lbl_800AD614:
/* 0A8074 800AD614 28050000 */  cmplwi	r5, 0
/* 0A8078 800AD618 40820010 */  bne		lbl_800AD628
/* 0A807C 800AD61C 3C608000 */  lis		r3, 0x8000
/* 0A8080 800AD620 908300DC */  stw		r4, 0xdc(r3)
/* 0A8084 800AD624 48000008 */  b		lbl_800AD62C
lbl_800AD628:
/* 0A8088 800AD628 908502FC */  stw		r4, 0x2fc(r5)
lbl_800AD62C:
/* 0A808C 800AD62C 38000000 */  li		r0, 0
/* 0A8090 800AD630 B01E02C8 */  sth		r0, 0x2c8(r30)
/* 0A8094 800AD634 4800000C */  b		lbl_800AD640
lbl_800AD638:
/* 0A8098 800AD638 38000008 */  li		r0, 8
/* 0A809C 800AD63C B01E02C8 */  sth		r0, 0x2c8(r30)
lbl_800AD640:
/* 0A80A0 800AD640 7FC3F378 */  mr		r3, r30
/* 0A80A4 800AD644 4BFFDE8D */  bl		__OSUnlockAllMutex
/* 0A80A8 800AD648 387E02E8 */  addi	r3, r30, 0x2e8
/* 0A80AC 800AD64C 48000521 */  bl		OSWakeupThread
/* 0A80B0 800AD650 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A80B4 800AD654 2C000000 */  cmpwi	r0, 0
/* 0A80B8 800AD658 4182000C */  beq		lbl_800AD664
/* 0A80BC 800AD65C 38600000 */  li		r3, 0
/* 0A80C0 800AD660 4BFFF949 */  bl		SelectThread
lbl_800AD664:
/* 0A80C4 800AD664 7FE3FB78 */  mr		r3, r31
/* 0A80C8 800AD668 4BFFD131 */  bl		OSRestoreInterrupts
lbl_800AD66C:
/* 0A80CC 800AD66C 80010024 */  lwz		r0, 0x24(r1)
/* 0A80D0 800AD670 83E1001C */  lwz		r31, 0x1c(r1)
/* 0A80D4 800AD674 83C10018 */  lwz		r30, 0x18(r1)
/* 0A80D8 800AD678 83A10014 */  lwz		r29, 0x14(r1)
/* 0A80DC 800AD67C 38210020 */  addi	r1, r1, 0x20
/* 0A80E0 800AD680 7C0803A6 */  mtlr	r0
/* 0A80E4 800AD684 4E800020 */  blr		

glabel OSResumeThread
/* 0A80E8 800AD688 7C0802A6 */  mflr	r0
/* 0A80EC 800AD68C 90010004 */  stw		r0, 4(r1)
/* 0A80F0 800AD690 9421FFD8 */  stwu	r1, -0x28(r1)
/* 0A80F4 800AD694 93E10024 */  stw		r31, 0x24(r1)
/* 0A80F8 800AD698 93C10020 */  stw		r30, 0x20(r1)
/* 0A80FC 800AD69C 93A1001C */  stw		r29, 0x1c(r1)
/* 0A8100 800AD6A0 7C7D1B78 */  mr		r29, r3
/* 0A8104 800AD6A4 4BFFD0CD */  bl		OSDisableInterrupts
/* 0A8108 800AD6A8 809D02CC */  lwz		r4, 0x2cc(r29)
/* 0A810C 800AD6AC 3BE30000 */  addi	r31, r3, 0
/* 0A8110 800AD6B0 3804FFFF */  addi	r0, r4, -1
/* 0A8114 800AD6B4 901D02CC */  stw		r0, 0x2cc(r29)
/* 0A8118 800AD6B8 7C9E2378 */  mr		r30, r4
/* 0A811C 800AD6BC 801D02CC */  lwz		r0, 0x2cc(r29)
/* 0A8120 800AD6C0 2C000000 */  cmpwi	r0, 0
/* 0A8124 800AD6C4 40800010 */  bge		lbl_800AD6D4
/* 0A8128 800AD6C8 38000000 */  li		r0, 0
/* 0A812C 800AD6CC 901D02CC */  stw		r0, 0x2cc(r29)
/* 0A8130 800AD6D0 48000218 */  b		lbl_800AD8E8
lbl_800AD6D4:
/* 0A8134 800AD6D4 40820214 */  bne		lbl_800AD8E8
/* 0A8138 800AD6D8 A01D02C8 */  lhz		r0, 0x2c8(r29)
/* 0A813C 800AD6DC 2C000004 */  cmpwi	r0, 4
/* 0A8140 800AD6E0 418200B8 */  beq		lbl_800AD798
/* 0A8144 800AD6E4 408001F0 */  bge		lbl_800AD8D4
/* 0A8148 800AD6E8 2C000001 */  cmpwi	r0, 1
/* 0A814C 800AD6EC 41820008 */  beq		lbl_800AD6F4
/* 0A8150 800AD6F0 480001E4 */  b		lbl_800AD8D4
lbl_800AD6F4:
/* 0A8154 800AD6F4 801D02D4 */  lwz		r0, 0x2d4(r29)
/* 0A8158 800AD6F8 807D02F4 */  lwz		r3, 0x2f4(r29)
/* 0A815C 800AD6FC 48000024 */  b		lbl_800AD720
lbl_800AD700:
/* 0A8160 800AD700 80830000 */  lwz		r4, 0(r3)
/* 0A8164 800AD704 28040000 */  cmplwi	r4, 0
/* 0A8168 800AD708 41820014 */  beq		lbl_800AD71C
/* 0A816C 800AD70C 808402D0 */  lwz		r4, 0x2d0(r4)
/* 0A8170 800AD710 7C040000 */  cmpw	r4, r0
/* 0A8174 800AD714 40800008 */  bge		lbl_800AD71C
/* 0A8178 800AD718 7C802378 */  mr		r0, r4
lbl_800AD71C:
/* 0A817C 800AD71C 80630010 */  lwz		r3, 0x10(r3)
lbl_800AD720:
/* 0A8180 800AD720 28030000 */  cmplwi	r3, 0
/* 0A8184 800AD724 4082FFDC */  bne		lbl_800AD700
/* 0A8188 800AD728 901D02D0 */  stw		r0, 0x2d0(r29)
/* 0A818C 800AD72C 3C608014 */  lis		r3, RunQueue@ha
/* 0A8190 800AD730 38030D38 */  addi	r0, r3, RunQueue@l
/* 0A8194 800AD734 807D02D0 */  lwz		r3, 0x2d0(r29)
/* 0A8198 800AD738 54631838 */  slwi	r3, r3, 3
/* 0A819C 800AD73C 7C001A14 */  add		r0, r0, r3
/* 0A81A0 800AD740 901D02DC */  stw		r0, 0x2dc(r29)
/* 0A81A4 800AD744 809D02DC */  lwz		r4, 0x2dc(r29)
/* 0A81A8 800AD748 80640004 */  lwz		r3, 4(r4)
/* 0A81AC 800AD74C 28030000 */  cmplwi	r3, 0
/* 0A81B0 800AD750 4082000C */  bne		lbl_800AD75C
/* 0A81B4 800AD754 93A40000 */  stw		r29, 0(r4)
/* 0A81B8 800AD758 48000008 */  b		lbl_800AD760
lbl_800AD75C:
/* 0A81BC 800AD75C 93A302E0 */  stw		r29, 0x2e0(r3)
lbl_800AD760:
/* 0A81C0 800AD760 907D02E4 */  stw		r3, 0x2e4(r29)
/* 0A81C4 800AD764 38000000 */  li		r0, 0
/* 0A81C8 800AD768 38600001 */  li		r3, 1
/* 0A81CC 800AD76C 901D02E0 */  stw		r0, 0x2e0(r29)
/* 0A81D0 800AD770 809D02DC */  lwz		r4, 0x2dc(r29)
/* 0A81D4 800AD774 93A40004 */  stw		r29, 4(r4)
/* 0A81D8 800AD778 801D02D0 */  lwz		r0, 0x2d0(r29)
/* 0A81DC 800AD77C 808D9170 */  lwz		r4, RunQueueBits-_SDA_BASE_(r13)
/* 0A81E0 800AD780 2000001F */  subfic	r0, r0, 0x1f
/* 0A81E4 800AD784 7C600030 */  slw		r0, r3, r0
/* 0A81E8 800AD788 7C800378 */  or		r0, r4, r0
/* 0A81EC 800AD78C 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A81F0 800AD790 906D9174 */  stw		r3, RunQueueHint-_SDA_BASE_(r13)
/* 0A81F4 800AD794 48000140 */  b		lbl_800AD8D4
lbl_800AD798:
/* 0A81F8 800AD798 809D02E0 */  lwz		r4, 0x2e0(r29)
/* 0A81FC 800AD79C 80BD02E4 */  lwz		r5, 0x2e4(r29)
/* 0A8200 800AD7A0 28040000 */  cmplwi	r4, 0
/* 0A8204 800AD7A4 40820010 */  bne		lbl_800AD7B4
/* 0A8208 800AD7A8 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A820C 800AD7AC 90A30004 */  stw		r5, 4(r3)
/* 0A8210 800AD7B0 48000008 */  b		lbl_800AD7B8
lbl_800AD7B4:
/* 0A8214 800AD7B4 90A402E4 */  stw		r5, 0x2e4(r4)
lbl_800AD7B8:
/* 0A8218 800AD7B8 28050000 */  cmplwi	r5, 0
/* 0A821C 800AD7BC 40820010 */  bne		lbl_800AD7CC
/* 0A8220 800AD7C0 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A8224 800AD7C4 90830000 */  stw		r4, 0(r3)
/* 0A8228 800AD7C8 48000008 */  b		lbl_800AD7D0
lbl_800AD7CC:
/* 0A822C 800AD7CC 908502E0 */  stw		r4, 0x2e0(r5)
lbl_800AD7D0:
/* 0A8230 800AD7D0 801D02D4 */  lwz		r0, 0x2d4(r29)
/* 0A8234 800AD7D4 807D02F4 */  lwz		r3, 0x2f4(r29)
/* 0A8238 800AD7D8 48000024 */  b		lbl_800AD7FC
lbl_800AD7DC:
/* 0A823C 800AD7DC 80830000 */  lwz		r4, 0(r3)
/* 0A8240 800AD7E0 28040000 */  cmplwi	r4, 0
/* 0A8244 800AD7E4 41820014 */  beq		lbl_800AD7F8
/* 0A8248 800AD7E8 808402D0 */  lwz		r4, 0x2d0(r4)
/* 0A824C 800AD7EC 7C040000 */  cmpw	r4, r0
/* 0A8250 800AD7F0 40800008 */  bge		lbl_800AD7F8
/* 0A8254 800AD7F4 7C802378 */  mr		r0, r4
lbl_800AD7F8:
/* 0A8258 800AD7F8 80630010 */  lwz		r3, 0x10(r3)
lbl_800AD7FC:
/* 0A825C 800AD7FC 28030000 */  cmplwi	r3, 0
/* 0A8260 800AD800 4082FFDC */  bne		lbl_800AD7DC
/* 0A8264 800AD804 901D02D0 */  stw		r0, 0x2d0(r29)
/* 0A8268 800AD808 809D02DC */  lwz		r4, 0x2dc(r29)
/* 0A826C 800AD80C 80A40000 */  lwz		r5, 0(r4)
/* 0A8270 800AD810 48000008 */  b		lbl_800AD818
lbl_800AD814:
/* 0A8274 800AD814 80A502E0 */  lwz		r5, 0x2e0(r5)
lbl_800AD818:
/* 0A8278 800AD818 28050000 */  cmplwi	r5, 0
/* 0A827C 800AD81C 41820014 */  beq		lbl_800AD830
/* 0A8280 800AD820 806502D0 */  lwz		r3, 0x2d0(r5)
/* 0A8284 800AD824 801D02D0 */  lwz		r0, 0x2d0(r29)
/* 0A8288 800AD828 7C030000 */  cmpw	r3, r0
/* 0A828C 800AD82C 4081FFE8 */  ble		lbl_800AD814
lbl_800AD830:
/* 0A8290 800AD830 28050000 */  cmplwi	r5, 0
/* 0A8294 800AD834 40820034 */  bne		lbl_800AD868
/* 0A8298 800AD838 80640004 */  lwz		r3, 4(r4)
/* 0A829C 800AD83C 28030000 */  cmplwi	r3, 0
/* 0A82A0 800AD840 4082000C */  bne		lbl_800AD84C
/* 0A82A4 800AD844 93A40000 */  stw		r29, 0(r4)
/* 0A82A8 800AD848 48000008 */  b		lbl_800AD850
lbl_800AD84C:
/* 0A82AC 800AD84C 93A302E0 */  stw		r29, 0x2e0(r3)
lbl_800AD850:
/* 0A82B0 800AD850 907D02E4 */  stw		r3, 0x2e4(r29)
/* 0A82B4 800AD854 38000000 */  li		r0, 0
/* 0A82B8 800AD858 901D02E0 */  stw		r0, 0x2e0(r29)
/* 0A82BC 800AD85C 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A82C0 800AD860 93A30004 */  stw		r29, 4(r3)
/* 0A82C4 800AD864 4800002C */  b		lbl_800AD890
lbl_800AD868:
/* 0A82C8 800AD868 90BD02E0 */  stw		r5, 0x2e0(r29)
/* 0A82CC 800AD86C 806502E4 */  lwz		r3, 0x2e4(r5)
/* 0A82D0 800AD870 93A502E4 */  stw		r29, 0x2e4(r5)
/* 0A82D4 800AD874 28030000 */  cmplwi	r3, 0
/* 0A82D8 800AD878 907D02E4 */  stw		r3, 0x2e4(r29)
/* 0A82DC 800AD87C 40820010 */  bne		lbl_800AD88C
/* 0A82E0 800AD880 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A82E4 800AD884 93A30000 */  stw		r29, 0(r3)
/* 0A82E8 800AD888 48000008 */  b		lbl_800AD890
lbl_800AD88C:
/* 0A82EC 800AD88C 93A302E0 */  stw		r29, 0x2e0(r3)
lbl_800AD890:
/* 0A82F0 800AD890 807D02F0 */  lwz		r3, 0x2f0(r29)
/* 0A82F4 800AD894 28030000 */  cmplwi	r3, 0
/* 0A82F8 800AD898 4182003C */  beq		lbl_800AD8D4
/* 0A82FC 800AD89C 83A30008 */  lwz		r29, 8(r3)
lbl_800AD8A0:
/* 0A8300 800AD8A0 801D02CC */  lwz		r0, 0x2cc(r29)
/* 0A8304 800AD8A4 2C000000 */  cmpwi	r0, 0
/* 0A8308 800AD8A8 4181002C */  bgt		lbl_800AD8D4
/* 0A830C 800AD8AC 7FA3EB78 */  mr		r3, r29
/* 0A8310 800AD8B0 4BFFF4FD */  bl		__OSGetEffectivePriority
/* 0A8314 800AD8B4 801D02D0 */  lwz		r0, 0x2d0(r29)
/* 0A8318 800AD8B8 38830000 */  addi	r4, r3, 0
/* 0A831C 800AD8BC 7C002000 */  cmpw	r0, r4
/* 0A8320 800AD8C0 41820014 */  beq		lbl_800AD8D4
/* 0A8324 800AD8C4 7FA3EB78 */  mr		r3, r29
/* 0A8328 800AD8C8 4BFFF521 */  bl		SetEffectivePriority
/* 0A832C 800AD8CC 7C7D1B79 */  or.		r29, r3, r3
/* 0A8330 800AD8D0 4082FFD0 */  bne		lbl_800AD8A0
lbl_800AD8D4:
/* 0A8334 800AD8D4 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A8338 800AD8D8 2C000000 */  cmpwi	r0, 0
/* 0A833C 800AD8DC 4182000C */  beq		lbl_800AD8E8
/* 0A8340 800AD8E0 38600000 */  li		r3, 0
/* 0A8344 800AD8E4 4BFFF6C5 */  bl		SelectThread
lbl_800AD8E8:
/* 0A8348 800AD8E8 7FE3FB78 */  mr		r3, r31
/* 0A834C 800AD8EC 4BFFCEAD */  bl		OSRestoreInterrupts
/* 0A8350 800AD8F0 7FC3F378 */  mr		r3, r30
/* 0A8354 800AD8F4 8001002C */  lwz		r0, 0x2c(r1)
/* 0A8358 800AD8F8 83E10024 */  lwz		r31, 0x24(r1)
/* 0A835C 800AD8FC 83C10020 */  lwz		r30, 0x20(r1)
/* 0A8360 800AD900 83A1001C */  lwz		r29, 0x1c(r1)
/* 0A8364 800AD904 38210028 */  addi	r1, r1, 0x28
/* 0A8368 800AD908 7C0803A6 */  mtlr	r0
/* 0A836C 800AD90C 4E800020 */  blr		

glabel OSSuspendThread
/* 0A8370 800AD910 7C0802A6 */  mflr	r0
/* 0A8374 800AD914 90010004 */  stw		r0, 4(r1)
/* 0A8378 800AD918 9421FFE0 */  stwu	r1, -0x20(r1)
/* 0A837C 800AD91C 93E1001C */  stw		r31, 0x1c(r1)
/* 0A8380 800AD920 93C10018 */  stw		r30, 0x18(r1)
/* 0A8384 800AD924 93A10014 */  stw		r29, 0x14(r1)
/* 0A8388 800AD928 7C7D1B78 */  mr		r29, r3
/* 0A838C 800AD92C 4BFFCE45 */  bl		OSDisableInterrupts
/* 0A8390 800AD930 809D02CC */  lwz		r4, 0x2cc(r29)
/* 0A8394 800AD934 3BE30000 */  addi	r31, r3, 0
/* 0A8398 800AD938 38040001 */  addi	r0, r4, 1
/* 0A839C 800AD93C 7C9E2379 */  or.		r30, r4, r4
/* 0A83A0 800AD940 901D02CC */  stw		r0, 0x2cc(r29)
/* 0A83A4 800AD944 40820114 */  bne		lbl_800ADA58
/* 0A83A8 800AD948 A01D02C8 */  lhz		r0, 0x2c8(r29)
/* 0A83AC 800AD94C 2C000003 */  cmpwi	r0, 3
/* 0A83B0 800AD950 418200F4 */  beq		lbl_800ADA44
/* 0A83B4 800AD954 40800014 */  bge		lbl_800AD968
/* 0A83B8 800AD958 2C000001 */  cmpwi	r0, 1
/* 0A83BC 800AD95C 41820028 */  beq		lbl_800AD984
/* 0A83C0 800AD960 40800014 */  bge		lbl_800AD974
/* 0A83C4 800AD964 480000E0 */  b		lbl_800ADA44
lbl_800AD968:
/* 0A83C8 800AD968 2C000005 */  cmpwi	r0, 5
/* 0A83CC 800AD96C 408000D8 */  bge		lbl_800ADA44
/* 0A83D0 800AD970 48000020 */  b		lbl_800AD990
lbl_800AD974:
/* 0A83D4 800AD974 38000001 */  li		r0, 1
/* 0A83D8 800AD978 900D9174 */  stw		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A83DC 800AD97C B01D02C8 */  sth		r0, 0x2c8(r29)
/* 0A83E0 800AD980 480000C4 */  b		lbl_800ADA44
lbl_800AD984:
/* 0A83E4 800AD984 7FA3EB78 */  mr		r3, r29
/* 0A83E8 800AD988 4BFFF3BD */  bl		UnsetRun
/* 0A83EC 800AD98C 480000B8 */  b		lbl_800ADA44
lbl_800AD990:
/* 0A83F0 800AD990 809D02E0 */  lwz		r4, 0x2e0(r29)
/* 0A83F4 800AD994 80BD02E4 */  lwz		r5, 0x2e4(r29)
/* 0A83F8 800AD998 28040000 */  cmplwi	r4, 0
/* 0A83FC 800AD99C 40820010 */  bne		lbl_800AD9AC
/* 0A8400 800AD9A0 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A8404 800AD9A4 90A30004 */  stw		r5, 4(r3)
/* 0A8408 800AD9A8 48000008 */  b		lbl_800AD9B0
lbl_800AD9AC:
/* 0A840C 800AD9AC 90A402E4 */  stw		r5, 0x2e4(r4)
lbl_800AD9B0:
/* 0A8410 800AD9B0 28050000 */  cmplwi	r5, 0
/* 0A8414 800AD9B4 40820010 */  bne		lbl_800AD9C4
/* 0A8418 800AD9B8 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A841C 800AD9BC 90830000 */  stw		r4, 0(r3)
/* 0A8420 800AD9C0 48000008 */  b		lbl_800AD9C8
lbl_800AD9C4:
/* 0A8424 800AD9C4 908502E0 */  stw		r4, 0x2e0(r5)
lbl_800AD9C8:
/* 0A8428 800AD9C8 38000020 */  li		r0, 0x20
/* 0A842C 800AD9CC 901D02D0 */  stw		r0, 0x2d0(r29)
/* 0A8430 800AD9D0 809D02DC */  lwz		r4, 0x2dc(r29)
/* 0A8434 800AD9D4 80640004 */  lwz		r3, 4(r4)
/* 0A8438 800AD9D8 28030000 */  cmplwi	r3, 0
/* 0A843C 800AD9DC 4082000C */  bne		lbl_800AD9E8
/* 0A8440 800AD9E0 93A40000 */  stw		r29, 0(r4)
/* 0A8444 800AD9E4 48000008 */  b		lbl_800AD9EC
lbl_800AD9E8:
/* 0A8448 800AD9E8 93A302E0 */  stw		r29, 0x2e0(r3)
lbl_800AD9EC:
/* 0A844C 800AD9EC 907D02E4 */  stw		r3, 0x2e4(r29)
/* 0A8450 800AD9F0 38000000 */  li		r0, 0
/* 0A8454 800AD9F4 901D02E0 */  stw		r0, 0x2e0(r29)
/* 0A8458 800AD9F8 807D02DC */  lwz		r3, 0x2dc(r29)
/* 0A845C 800AD9FC 93A30004 */  stw		r29, 4(r3)
/* 0A8460 800ADA00 807D02F0 */  lwz		r3, 0x2f0(r29)
/* 0A8464 800ADA04 28030000 */  cmplwi	r3, 0
/* 0A8468 800ADA08 4182003C */  beq		lbl_800ADA44
/* 0A846C 800ADA0C 83A30008 */  lwz		r29, 8(r3)
lbl_800ADA10:
/* 0A8470 800ADA10 801D02CC */  lwz		r0, 0x2cc(r29)
/* 0A8474 800ADA14 2C000000 */  cmpwi	r0, 0
/* 0A8478 800ADA18 4181002C */  bgt		lbl_800ADA44
/* 0A847C 800ADA1C 7FA3EB78 */  mr		r3, r29
/* 0A8480 800ADA20 4BFFF38D */  bl		__OSGetEffectivePriority
/* 0A8484 800ADA24 801D02D0 */  lwz		r0, 0x2d0(r29)
/* 0A8488 800ADA28 38830000 */  addi	r4, r3, 0
/* 0A848C 800ADA2C 7C002000 */  cmpw	r0, r4
/* 0A8490 800ADA30 41820014 */  beq		lbl_800ADA44
/* 0A8494 800ADA34 7FA3EB78 */  mr		r3, r29
/* 0A8498 800ADA38 4BFFF3B1 */  bl		SetEffectivePriority
/* 0A849C 800ADA3C 7C7D1B79 */  or.		r29, r3, r3
/* 0A84A0 800ADA40 4082FFD0 */  bne		lbl_800ADA10
lbl_800ADA44:
/* 0A84A4 800ADA44 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A84A8 800ADA48 2C000000 */  cmpwi	r0, 0
/* 0A84AC 800ADA4C 4182000C */  beq		lbl_800ADA58
/* 0A84B0 800ADA50 38600000 */  li		r3, 0
/* 0A84B4 800ADA54 4BFFF555 */  bl		SelectThread
lbl_800ADA58:
/* 0A84B8 800ADA58 7FE3FB78 */  mr		r3, r31
/* 0A84BC 800ADA5C 4BFFCD3D */  bl		OSRestoreInterrupts
/* 0A84C0 800ADA60 7FC3F378 */  mr		r3, r30
/* 0A84C4 800ADA64 80010024 */  lwz		r0, 0x24(r1)
/* 0A84C8 800ADA68 83E1001C */  lwz		r31, 0x1c(r1)
/* 0A84CC 800ADA6C 83C10018 */  lwz		r30, 0x18(r1)
/* 0A84D0 800ADA70 83A10014 */  lwz		r29, 0x14(r1)
/* 0A84D4 800ADA74 38210020 */  addi	r1, r1, 0x20
/* 0A84D8 800ADA78 7C0803A6 */  mtlr	r0
/* 0A84DC 800ADA7C 4E800020 */  blr		

glabel OSSleepThread
/* 0A84E0 800ADA80 7C0802A6 */  mflr	r0
/* 0A84E4 800ADA84 90010004 */  stw		r0, 4(r1)
/* 0A84E8 800ADA88 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A84EC 800ADA8C 93E10014 */  stw		r31, 0x14(r1)
/* 0A84F0 800ADA90 93C10010 */  stw		r30, 0x10(r1)
/* 0A84F4 800ADA94 7C7E1B78 */  mr		r30, r3
/* 0A84F8 800ADA98 4BFFCCD9 */  bl		OSDisableInterrupts
/* 0A84FC 800ADA9C 3C808000 */  lis		r4, 0x8000
/* 0A8500 800ADAA0 808400E4 */  lwz		r4, 0xe4(r4)
/* 0A8504 800ADAA4 38000004 */  li		r0, 4
/* 0A8508 800ADAA8 7C7F1B78 */  mr		r31, r3
/* 0A850C 800ADAAC B00402C8 */  sth		r0, 0x2c8(r4)
/* 0A8510 800ADAB0 93C402DC */  stw		r30, 0x2dc(r4)
/* 0A8514 800ADAB4 80BE0000 */  lwz		r5, 0(r30)
/* 0A8518 800ADAB8 48000008 */  b		lbl_800ADAC0
lbl_800ADABC:
/* 0A851C 800ADABC 80A502E0 */  lwz		r5, 0x2e0(r5)
lbl_800ADAC0:
/* 0A8520 800ADAC0 28050000 */  cmplwi	r5, 0
/* 0A8524 800ADAC4 41820014 */  beq		lbl_800ADAD8
/* 0A8528 800ADAC8 806502D0 */  lwz		r3, 0x2d0(r5)
/* 0A852C 800ADACC 800402D0 */  lwz		r0, 0x2d0(r4)
/* 0A8530 800ADAD0 7C030000 */  cmpw	r3, r0
/* 0A8534 800ADAD4 4081FFE8 */  ble		lbl_800ADABC
lbl_800ADAD8:
/* 0A8538 800ADAD8 28050000 */  cmplwi	r5, 0
/* 0A853C 800ADADC 40820030 */  bne		lbl_800ADB0C
/* 0A8540 800ADAE0 807E0004 */  lwz		r3, 4(r30)
/* 0A8544 800ADAE4 28030000 */  cmplwi	r3, 0
/* 0A8548 800ADAE8 4082000C */  bne		lbl_800ADAF4
/* 0A854C 800ADAEC 909E0000 */  stw		r4, 0(r30)
/* 0A8550 800ADAF0 48000008 */  b		lbl_800ADAF8
lbl_800ADAF4:
/* 0A8554 800ADAF4 908302E0 */  stw		r4, 0x2e0(r3)
lbl_800ADAF8:
/* 0A8558 800ADAF8 906402E4 */  stw		r3, 0x2e4(r4)
/* 0A855C 800ADAFC 38000000 */  li		r0, 0
/* 0A8560 800ADB00 900402E0 */  stw		r0, 0x2e0(r4)
/* 0A8564 800ADB04 909E0004 */  stw		r4, 4(r30)
/* 0A8568 800ADB08 48000028 */  b		lbl_800ADB30
lbl_800ADB0C:
/* 0A856C 800ADB0C 90A402E0 */  stw		r5, 0x2e0(r4)
/* 0A8570 800ADB10 806502E4 */  lwz		r3, 0x2e4(r5)
/* 0A8574 800ADB14 908502E4 */  stw		r4, 0x2e4(r5)
/* 0A8578 800ADB18 28030000 */  cmplwi	r3, 0
/* 0A857C 800ADB1C 906402E4 */  stw		r3, 0x2e4(r4)
/* 0A8580 800ADB20 4082000C */  bne		lbl_800ADB2C
/* 0A8584 800ADB24 909E0000 */  stw		r4, 0(r30)
/* 0A8588 800ADB28 48000008 */  b		lbl_800ADB30
lbl_800ADB2C:
/* 0A858C 800ADB2C 908302E0 */  stw		r4, 0x2e0(r3)
lbl_800ADB30:
/* 0A8590 800ADB30 38000001 */  li		r0, 1
/* 0A8594 800ADB34 900D9174 */  stw		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A8598 800ADB38 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A859C 800ADB3C 2C000000 */  cmpwi	r0, 0
/* 0A85A0 800ADB40 4182000C */  beq		lbl_800ADB4C
/* 0A85A4 800ADB44 38600000 */  li		r3, 0
/* 0A85A8 800ADB48 4BFFF461 */  bl		SelectThread
lbl_800ADB4C:
/* 0A85AC 800ADB4C 7FE3FB78 */  mr		r3, r31
/* 0A85B0 800ADB50 4BFFCC49 */  bl		OSRestoreInterrupts
/* 0A85B4 800ADB54 8001001C */  lwz		r0, 0x1c(r1)
/* 0A85B8 800ADB58 83E10014 */  lwz		r31, 0x14(r1)
/* 0A85BC 800ADB5C 83C10010 */  lwz		r30, 0x10(r1)
/* 0A85C0 800ADB60 38210018 */  addi	r1, r1, 0x18
/* 0A85C4 800ADB64 7C0803A6 */  mtlr	r0
/* 0A85C8 800ADB68 4E800020 */  blr		

glabel OSWakeupThread
/* 0A85CC 800ADB6C 7C0802A6 */  mflr	r0
/* 0A85D0 800ADB70 90010004 */  stw		r0, 4(r1)
/* 0A85D4 800ADB74 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A85D8 800ADB78 93E10014 */  stw		r31, 0x14(r1)
/* 0A85DC 800ADB7C 93C10010 */  stw		r30, 0x10(r1)
/* 0A85E0 800ADB80 7C7E1B78 */  mr		r30, r3
/* 0A85E4 800ADB84 4BFFCBED */  bl		OSDisableInterrupts
/* 0A85E8 800ADB88 3C808014 */  lis		r4, RunQueue@ha
/* 0A85EC 800ADB8C 3BE30000 */  addi	r31, r3, 0
/* 0A85F0 800ADB90 38A40D38 */  addi	r5, r4, RunQueue@l
/* 0A85F4 800ADB94 4800009C */  b		lbl_800ADC30
lbl_800ADB98:
/* 0A85F8 800ADB98 806602E0 */  lwz		r3, 0x2e0(r6)
/* 0A85FC 800ADB9C 28030000 */  cmplwi	r3, 0
/* 0A8600 800ADBA0 40820010 */  bne		lbl_800ADBB0
/* 0A8604 800ADBA4 38000000 */  li		r0, 0
/* 0A8608 800ADBA8 901E0004 */  stw		r0, 4(r30)
/* 0A860C 800ADBAC 4800000C */  b		lbl_800ADBB8
lbl_800ADBB0:
/* 0A8610 800ADBB0 38000000 */  li		r0, 0
/* 0A8614 800ADBB4 900302E4 */  stw		r0, 0x2e4(r3)
lbl_800ADBB8:
/* 0A8618 800ADBB8 907E0000 */  stw		r3, 0(r30)
/* 0A861C 800ADBBC 38000001 */  li		r0, 1
/* 0A8620 800ADBC0 B00602C8 */  sth		r0, 0x2c8(r6)
/* 0A8624 800ADBC4 800602CC */  lwz		r0, 0x2cc(r6)
/* 0A8628 800ADBC8 2C000000 */  cmpwi	r0, 0
/* 0A862C 800ADBCC 41810064 */  bgt		lbl_800ADC30
/* 0A8630 800ADBD0 800602D0 */  lwz		r0, 0x2d0(r6)
/* 0A8634 800ADBD4 54001838 */  slwi	r0, r0, 3
/* 0A8638 800ADBD8 7C050214 */  add		r0, r5, r0
/* 0A863C 800ADBDC 900602DC */  stw		r0, 0x2dc(r6)
/* 0A8640 800ADBE0 808602DC */  lwz		r4, 0x2dc(r6)
/* 0A8644 800ADBE4 80640004 */  lwz		r3, 4(r4)
/* 0A8648 800ADBE8 28030000 */  cmplwi	r3, 0
/* 0A864C 800ADBEC 4082000C */  bne		lbl_800ADBF8
/* 0A8650 800ADBF0 90C40000 */  stw		r6, 0(r4)
/* 0A8654 800ADBF4 48000008 */  b		lbl_800ADBFC
lbl_800ADBF8:
/* 0A8658 800ADBF8 90C302E0 */  stw		r6, 0x2e0(r3)
lbl_800ADBFC:
/* 0A865C 800ADBFC 906602E4 */  stw		r3, 0x2e4(r6)
/* 0A8660 800ADC00 38000000 */  li		r0, 0
/* 0A8664 800ADC04 38600001 */  li		r3, 1
/* 0A8668 800ADC08 900602E0 */  stw		r0, 0x2e0(r6)
/* 0A866C 800ADC0C 808602DC */  lwz		r4, 0x2dc(r6)
/* 0A8670 800ADC10 90C40004 */  stw		r6, 4(r4)
/* 0A8674 800ADC14 800602D0 */  lwz		r0, 0x2d0(r6)
/* 0A8678 800ADC18 808D9170 */  lwz		r4, RunQueueBits-_SDA_BASE_(r13)
/* 0A867C 800ADC1C 2000001F */  subfic	r0, r0, 0x1f
/* 0A8680 800ADC20 7C600030 */  slw		r0, r3, r0
/* 0A8684 800ADC24 7C800378 */  or		r0, r4, r0
/* 0A8688 800ADC28 900D9170 */  stw		r0, RunQueueBits-_SDA_BASE_(r13)
/* 0A868C 800ADC2C 906D9174 */  stw		r3, RunQueueHint-_SDA_BASE_(r13)
lbl_800ADC30:
/* 0A8690 800ADC30 80DE0000 */  lwz		r6, 0(r30)
/* 0A8694 800ADC34 28060000 */  cmplwi	r6, 0
/* 0A8698 800ADC38 4082FF60 */  bne		lbl_800ADB98
/* 0A869C 800ADC3C 800D9174 */  lwz		r0, RunQueueHint-_SDA_BASE_(r13)
/* 0A86A0 800ADC40 2C000000 */  cmpwi	r0, 0
/* 0A86A4 800ADC44 4182000C */  beq		lbl_800ADC50
/* 0A86A8 800ADC48 38600000 */  li		r3, 0
/* 0A86AC 800ADC4C 4BFFF35D */  bl		SelectThread
lbl_800ADC50:
/* 0A86B0 800ADC50 7FE3FB78 */  mr		r3, r31
/* 0A86B4 800ADC54 4BFFCB45 */  bl		OSRestoreInterrupts
/* 0A86B8 800ADC58 8001001C */  lwz		r0, 0x1c(r1)
/* 0A86BC 800ADC5C 83E10014 */  lwz		r31, 0x14(r1)
/* 0A86C0 800ADC60 83C10010 */  lwz		r30, 0x10(r1)
/* 0A86C4 800ADC64 38210018 */  addi	r1, r1, 0x18
/* 0A86C8 800ADC68 7C0803A6 */  mtlr	r0
/* 0A86CC 800ADC6C 4E800020 */  blr		

glabel OSClearStack
/* 0A86D0 800ADC70 7C0802A6 */  mflr	r0
/* 0A86D4 800ADC74 90010004 */  stw		r0, 4(r1)
/* 0A86D8 800ADC78 5460821E */  rlwinm	r0, r3, 0x10, 8, 0xf
/* 0A86DC 800ADC7C 5060C00E */  rlwimi	r0, r3, 0x18, 0, 7
/* 0A86E0 800ADC80 9421FFE8 */  stwu	r1, -0x18(r1)
/* 0A86E4 800ADC84 5060442E */  rlwimi	r0, r3, 8, 0x10, 0x17
/* 0A86E8 800ADC88 93E10014 */  stw		r31, 0x14(r1)
/* 0A86EC 800ADC8C 7C1F0378 */  mr		r31, r0
/* 0A86F0 800ADC90 507F063E */  rlwimi	r31, r3, 0, 0x18, 0x1f
/* 0A86F4 800ADC94 4BFFBF7D */  bl		OSGetStackPointer
/* 0A86F8 800ADC98 3C808000 */  lis		r4, 0x8000
/* 0A86FC 800ADC9C 80A400E4 */  lwz		r5, 0xe4(r4)
/* 0A8700 800ADCA0 38830003 */  addi	r4, r3, 3
/* 0A8704 800ADCA4 80A50308 */  lwz		r5, 0x308(r5)
/* 0A8708 800ADCA8 38A50004 */  addi	r5, r5, 4
/* 0A870C 800ADCAC 7C051840 */  cmplw	r5, r3
/* 0A8710 800ADCB0 7C852050 */  subf	r4, r5, r4
/* 0A8714 800ADCB4 5484F0BE */  srwi	r4, r4, 2
/* 0A8718 800ADCB8 40800050 */  bge		lbl_800ADD08
/* 0A871C 800ADCBC 5480E8FF */  rlwinm.	r0, r4, 0x1d, 3, 0x1f
/* 0A8720 800ADCC0 7C0903A6 */  mtctr	r0
/* 0A8724 800ADCC4 41820034 */  beq		lbl_800ADCF8
lbl_800ADCC8:
/* 0A8728 800ADCC8 93E50000 */  stw		r31, 0(r5)
/* 0A872C 800ADCCC 93E50004 */  stw		r31, 4(r5)
/* 0A8730 800ADCD0 93E50008 */  stw		r31, 8(r5)
/* 0A8734 800ADCD4 93E5000C */  stw		r31, 0xc(r5)
/* 0A8738 800ADCD8 93E50010 */  stw		r31, 0x10(r5)
/* 0A873C 800ADCDC 93E50014 */  stw		r31, 0x14(r5)
/* 0A8740 800ADCE0 93E50018 */  stw		r31, 0x18(r5)
/* 0A8744 800ADCE4 93E5001C */  stw		r31, 0x1c(r5)
/* 0A8748 800ADCE8 38A50020 */  addi	r5, r5, 0x20
/* 0A874C 800ADCEC 4200FFDC */  bdnz	lbl_800ADCC8
/* 0A8750 800ADCF0 70840007 */  andi.	r4, r4, 7
/* 0A8754 800ADCF4 41820014 */  beq		lbl_800ADD08
lbl_800ADCF8:
/* 0A8758 800ADCF8 7C8903A6 */  mtctr	r4
lbl_800ADCFC:
/* 0A875C 800ADCFC 93E50000 */  stw		r31, 0(r5)
/* 0A8760 800ADD00 38A50004 */  addi	r5, r5, 4
/* 0A8764 800ADD04 4200FFF8 */  bdnz	lbl_800ADCFC
lbl_800ADD08:
/* 0A8768 800ADD08 8001001C */  lwz		r0, 0x1c(r1)
/* 0A876C 800ADD0C 83E10014 */  lwz		r31, 0x14(r1)
/* 0A8770 800ADD10 38210018 */  addi	r1, r1, 0x18
/* 0A8774 800ADD14 7C0803A6 */  mtlr	r0
/* 0A8778 800ADD18 4E800020 */  blr		


.section .bss, "wa"

.balign 8

/* 0013DDB8 80140D38 0100 */
RunQueue:
    .skip 256

.balign 4

/* 0013DEB8 80140E38 0318 */
IdleThread:
    .skip 792

.balign 4

/* 0013E1D0 80141150 0318 */
DefaultThread:
    .skip 792

.balign 4

/* 0013E4E8 80141468 02C8 */
IdleContext:
    .skip 712


.section .sdata, "wa"

.balign 8

/* 000FFF60 80145700 0004 */
SwitchThreadCallback:
    .long DefaultSwitchThreadCallback


.section .sbss, "wa"

.balign 8

/* 001003B0 80145B50 0004 */
RunQueueBits:
    .skip 4

.balign 4

/* 001003B4 80145B54 0004 */
RunQueueHint:
    .skip 4

.balign 4

/* 001003B8 80145B58 0004 */
Reschedule:
    .skip 4


