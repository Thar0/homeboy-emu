# GXMisc.c
.include "macros.inc"

.section .text, "ax"

.balign 4

glabel GXSetMisc
/* 0B0FC4 800B6564 2C030002 */  cmpwi   r3, 2
/* 0B0FC8 800B6568 41820060 */  beq     lbl_800B65C8
/* 0B0FCC 800B656C 40800014 */  bge     lbl_800B6580
/* 0B0FD0 800B6570 2C030000 */  cmpwi   r3, 0
/* 0B0FD4 800B6574 4D820020 */  beqlr   
/* 0B0FD8 800B6578 40800014 */  bge     lbl_800B658C
/* 0B0FDC 800B657C 4E800020 */  blr     
lbl_800B6580:
/* 0B0FE0 800B6580 2C030004 */  cmpwi   r3, 4
/* 0B0FE4 800B6584 4C800020 */  bgelr   
/* 0B0FE8 800B6588 48000058 */  b       lbl_800B65E0
lbl_800B658C:
/* 0B0FEC 800B658C 80A284B0 */  lwz     r5, __GXData-_SDA2_BASE_(r2)
/* 0B0FF0 800B6590 38000001 */  li      r0, 1
/* 0B0FF4 800B6594 B0850004 */  sth     r4, 4(r5)
/* 0B0FF8 800B6598 A0650004 */  lhz     r3, 4(r5)
/* 0B0FFC 800B659C 7C630034 */  cntlzw  r3, r3
/* 0B1000 800B65A0 5463DC3E */  rlwinm  r3, r3, 0x1b, 0x10, 0x1f
/* 0B1004 800B65A4 B0650000 */  sth     r3, 0(r5)
/* 0B1008 800B65A8 B0050002 */  sth     r0, 2(r5)
/* 0B100C 800B65AC A0050004 */  lhz     r0, 4(r5)
/* 0B1010 800B65B0 28000000 */  cmplwi  r0, 0
/* 0B1014 800B65B4 4D820020 */  beqlr   
/* 0B1018 800B65B8 800505AC */  lwz     r0, 0x5ac(r5)
/* 0B101C 800B65BC 60000008 */  ori     r0, r0, 8
/* 0B1020 800B65C0 900505AC */  stw     r0, 0x5ac(r5)
/* 0B1024 800B65C4 4E800020 */  blr     
lbl_800B65C8:
/* 0B1028 800B65C8 7C8400D0 */  neg     r4, r4
/* 0B102C 800B65CC 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B1030 800B65D0 3004FFFF */  addic   r0, r4, -1
/* 0B1034 800B65D4 7C002110 */  subfe   r0, r0, r4
/* 0B1038 800B65D8 980305A9 */  stb     r0, 0x5a9(r3)
/* 0B103C 800B65DC 4E800020 */  blr     
lbl_800B65E0:
/* 0B1040 800B65E0 7C8400D0 */  neg     r4, r4
/* 0B1044 800B65E4 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B1048 800B65E8 3004FFFF */  addic   r0, r4, -1
/* 0B104C 800B65EC 7C002110 */  subfe   r0, r0, r4
/* 0B1050 800B65F0 980305AA */  stb     r0, 0x5aa(r3)
/* 0B1054 800B65F4 4E800020 */  blr     

glabel GXFlush
/* 0B1058 800B65F8 7C0802A6 */  mflr    r0
/* 0B105C 800B65FC 90010004 */  stw     r0, 4(r1)
/* 0B1060 800B6600 9421FFF8 */  stwu    r1, -8(r1)
/* 0B1064 800B6604 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B1068 800B6608 800305AC */  lwz     r0, 0x5ac(r3)
/* 0B106C 800B660C 28000000 */  cmplwi  r0, 0
/* 0B1070 800B6610 41820008 */  beq     lbl_800B6618
/* 0B1074 800B6614 48000865 */  bl      __GXSetDirtyState
lbl_800B6618:
/* 0B1078 800B6618 38000000 */  li      r0, 0
/* 0B107C 800B661C 3C60CC01 */  lis     r3, 0xcc01
/* 0B1080 800B6620 90038000 */  stw     r0, -0x8000(r3)
/* 0B1084 800B6624 90038000 */  stw     r0, -0x8000(r3)
/* 0B1088 800B6628 90038000 */  stw     r0, -0x8000(r3)
/* 0B108C 800B662C 90038000 */  stw     r0, -0x8000(r3)
/* 0B1090 800B6630 90038000 */  stw     r0, -0x8000(r3)
/* 0B1094 800B6634 90038000 */  stw     r0, -0x8000(r3)
/* 0B1098 800B6638 90038000 */  stw     r0, -0x8000(r3)
/* 0B109C 800B663C 90038000 */  stw     r0, -0x8000(r3)
/* 0B10A0 800B6640 4BFF0F29 */  bl      PPCSync
/* 0B10A4 800B6644 8001000C */  lwz     r0, 0xc(r1)
/* 0B10A8 800B6648 38210008 */  addi    r1, r1, 8
/* 0B10AC 800B664C 7C0803A6 */  mtlr    r0
/* 0B10B0 800B6650 4E800020 */  blr     

glabel __GXAbort
/* 0B10B4 800B6654 7C0802A6 */  mflr    r0
/* 0B10B8 800B6658 90010004 */  stw     r0, 4(r1)
/* 0B10BC 800B665C 9421FFD8 */  stwu    r1, -0x28(r1)
/* 0B10C0 800B6660 BF610014 */  stmw    r27, 0x14(r1)
/* 0B10C4 800B6664 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B10C8 800B6668 880305AA */  lbz     r0, 0x5aa(r3)
/* 0B10CC 800B666C 28000000 */  cmplwi  r0, 0
/* 0B10D0 800B6670 418200B0 */  beq     lbl_800B6720
/* 0B10D4 800B6674 4BFFF195 */  bl      GXGetGPFifo
/* 0B10D8 800B6678 28030000 */  cmplwi  r3, 0
/* 0B10DC 800B667C 418200A4 */  beq     lbl_800B6720
/* 0B10E0 800B6680 806D922C */  lwz     r3, __memReg-_SDA_BASE_(r13)
/* 0B10E4 800B6684 38C3004E */  addi    r6, r3, 0x4e
/* 0B10E8 800B6688 A083004E */  lhz     r4, 0x4e(r3)
/* 0B10EC 800B668C 38A30050 */  addi    r5, r3, 0x50
lbl_800B6690:
/* 0B10F0 800B6690 7C802378 */  mr      r0, r4
/* 0B10F4 800B6694 A0860000 */  lhz     r4, 0(r6)
/* 0B10F8 800B6698 A0650000 */  lhz     r3, 0(r5)
/* 0B10FC 800B669C 7C040040 */  cmplw   r4, r0
/* 0B1100 800B66A0 4082FFF0 */  bne     lbl_800B6690
/* 0B1104 800B66A4 5480801E */  slwi    r0, r4, 0x10
/* 0B1108 800B66A8 7C1B1B78 */  or      r27, r0, r3
lbl_800B66AC:
/* 0B110C 800B66AC 4BFF7671 */  bl      OSGetTime
/* 0B1110 800B66B0 38000000 */  li      r0, 0
/* 0B1114 800B66B4 3BE40000 */  addi    r31, r4, 0
/* 0B1118 800B66B8 3BC30000 */  addi    r30, r3, 0
/* 0B111C 800B66BC 6C1C8000 */  xoris   r28, r0, 0x8000
/* 0B1120 800B66C0 3BA00008 */  li      r29, 8
lbl_800B66C4:
/* 0B1124 800B66C4 4BFF7659 */  bl      OSGetTime
/* 0B1128 800B66C8 7C9F2010 */  subfc   r4, r31, r4
/* 0B112C 800B66CC 7C1E1910 */  subfe   r0, r30, r3
/* 0B1130 800B66D0 6C038000 */  xoris   r3, r0, 0x8000
/* 0B1134 800B66D4 7C04E810 */  subfc   r0, r4, r29
/* 0B1138 800B66D8 7C63E110 */  subfe   r3, r3, r28
/* 0B113C 800B66DC 7C7CE110 */  subfe   r3, r28, r28
/* 0B1140 800B66E0 7C6300D1 */  neg.    r3, r3
/* 0B1144 800B66E4 4182FFE0 */  beq     lbl_800B66C4
/* 0B1148 800B66E8 806D922C */  lwz     r3, __memReg-_SDA_BASE_(r13)
/* 0B114C 800B66EC 38C3004E */  addi    r6, r3, 0x4e
/* 0B1150 800B66F0 A083004E */  lhz     r4, 0x4e(r3)
/* 0B1154 800B66F4 38A30050 */  addi    r5, r3, 0x50
lbl_800B66F8:
/* 0B1158 800B66F8 7C802378 */  mr      r0, r4
/* 0B115C 800B66FC A0860000 */  lhz     r4, 0(r6)
/* 0B1160 800B6700 A0650000 */  lhz     r3, 0(r5)
/* 0B1164 800B6704 7C040040 */  cmplw   r4, r0
/* 0B1168 800B6708 4082FFF0 */  bne     lbl_800B66F8
/* 0B116C 800B670C 5480801E */  slwi    r0, r4, 0x10
/* 0B1170 800B6710 7C001B78 */  or      r0, r0, r3
/* 0B1174 800B6714 7C00D840 */  cmplw   r0, r27
/* 0B1178 800B6718 7C1B0378 */  mr      r27, r0
/* 0B117C 800B671C 4082FF90 */  bne     lbl_800B66AC
lbl_800B6720:
/* 0B1180 800B6720 3C60CC00 */  lis     r3, 0xcc00
/* 0B1184 800B6724 38000001 */  li      r0, 1
/* 0B1188 800B6728 3B633000 */  addi    r27, r3, 0x3000
/* 0B118C 800B672C 941B0018 */  stwu    r0, 0x18(r27)
/* 0B1190 800B6730 4BFF75ED */  bl      OSGetTime
/* 0B1194 800B6734 38000000 */  li      r0, 0
/* 0B1198 800B6738 3BE40000 */  addi    r31, r4, 0
/* 0B119C 800B673C 3BC30000 */  addi    r30, r3, 0
/* 0B11A0 800B6740 6C1C8000 */  xoris   r28, r0, 0x8000
/* 0B11A4 800B6744 3BA00032 */  li      r29, 0x32
lbl_800B6748:
/* 0B11A8 800B6748 4BFF75D5 */  bl      OSGetTime
/* 0B11AC 800B674C 7C9F2010 */  subfc   r4, r31, r4
/* 0B11B0 800B6750 7C1E1910 */  subfe   r0, r30, r3
/* 0B11B4 800B6754 6C038000 */  xoris   r3, r0, 0x8000
/* 0B11B8 800B6758 7C04E810 */  subfc   r0, r4, r29
/* 0B11BC 800B675C 7C63E110 */  subfe   r3, r3, r28
/* 0B11C0 800B6760 7C7CE110 */  subfe   r3, r28, r28
/* 0B11C4 800B6764 7C6300D1 */  neg.    r3, r3
/* 0B11C8 800B6768 4182FFE0 */  beq     lbl_800B6748
/* 0B11CC 800B676C 3BC00000 */  li      r30, 0
/* 0B11D0 800B6770 93DB0000 */  stw     r30, 0(r27)
/* 0B11D4 800B6774 4BFF75A9 */  bl      OSGetTime
/* 0B11D8 800B6778 3B840000 */  addi    r28, r4, 0
/* 0B11DC 800B677C 3BA30000 */  addi    r29, r3, 0
/* 0B11E0 800B6780 6FDF8000 */  xoris   r31, r30, 0x8000
/* 0B11E4 800B6784 3BC00005 */  li      r30, 5
lbl_800B6788:
/* 0B11E8 800B6788 4BFF7595 */  bl      OSGetTime
/* 0B11EC 800B678C 7C9C2010 */  subfc   r4, r28, r4
/* 0B11F0 800B6790 7C1D1910 */  subfe   r0, r29, r3
/* 0B11F4 800B6794 6C038000 */  xoris   r3, r0, 0x8000
/* 0B11F8 800B6798 7C04F010 */  subfc   r0, r4, r30
/* 0B11FC 800B679C 7C63F910 */  subfe   r3, r3, r31
/* 0B1200 800B67A0 7C7FF910 */  subfe   r3, r31, r31
/* 0B1204 800B67A4 7C6300D1 */  neg.    r3, r3
/* 0B1208 800B67A8 4182FFE0 */  beq     lbl_800B6788
/* 0B120C 800B67AC BB610014 */  lmw     r27, 0x14(r1)
/* 0B1210 800B67B0 8001002C */  lwz     r0, 0x2c(r1)
/* 0B1214 800B67B4 38210028 */  addi    r1, r1, 0x28
/* 0B1218 800B67B8 7C0803A6 */  mtlr    r0
/* 0B121C 800B67BC 4E800020 */  blr     

glabel GXAbortFrame
/* 0B1220 800B67C0 7C0802A6 */  mflr    r0
/* 0B1224 800B67C4 90010004 */  stw     r0, 4(r1)
/* 0B1228 800B67C8 9421FFD8 */  stwu    r1, -0x28(r1)
/* 0B122C 800B67CC BF610014 */  stmw    r27, 0x14(r1)
/* 0B1230 800B67D0 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B1234 800B67D4 880305AA */  lbz     r0, 0x5aa(r3)
/* 0B1238 800B67D8 28000000 */  cmplwi  r0, 0
/* 0B123C 800B67DC 418200B0 */  beq     lbl_800B688C
/* 0B1240 800B67E0 4BFFF029 */  bl      GXGetGPFifo
/* 0B1244 800B67E4 28030000 */  cmplwi  r3, 0
/* 0B1248 800B67E8 418200A4 */  beq     lbl_800B688C
/* 0B124C 800B67EC 806D922C */  lwz     r3, __memReg-_SDA_BASE_(r13)
/* 0B1250 800B67F0 38C3004E */  addi    r6, r3, 0x4e
/* 0B1254 800B67F4 A083004E */  lhz     r4, 0x4e(r3)
/* 0B1258 800B67F8 38A30050 */  addi    r5, r3, 0x50
lbl_800B67FC:
/* 0B125C 800B67FC 7C802378 */  mr      r0, r4
/* 0B1260 800B6800 A0860000 */  lhz     r4, 0(r6)
/* 0B1264 800B6804 A0650000 */  lhz     r3, 0(r5)
/* 0B1268 800B6808 7C040040 */  cmplw   r4, r0
/* 0B126C 800B680C 4082FFF0 */  bne     lbl_800B67FC
/* 0B1270 800B6810 5480801E */  slwi    r0, r4, 0x10
/* 0B1274 800B6814 7C1B1B78 */  or      r27, r0, r3
lbl_800B6818:
/* 0B1278 800B6818 4BFF7505 */  bl      OSGetTime
/* 0B127C 800B681C 38000000 */  li      r0, 0
/* 0B1280 800B6820 3BE40000 */  addi    r31, r4, 0
/* 0B1284 800B6824 3BC30000 */  addi    r30, r3, 0
/* 0B1288 800B6828 6C1C8000 */  xoris   r28, r0, 0x8000
/* 0B128C 800B682C 3BA00008 */  li      r29, 8
lbl_800B6830:
/* 0B1290 800B6830 4BFF74ED */  bl      OSGetTime
/* 0B1294 800B6834 7C9F2010 */  subfc   r4, r31, r4
/* 0B1298 800B6838 7C1E1910 */  subfe   r0, r30, r3
/* 0B129C 800B683C 6C038000 */  xoris   r3, r0, 0x8000
/* 0B12A0 800B6840 7C04E810 */  subfc   r0, r4, r29
/* 0B12A4 800B6844 7C63E110 */  subfe   r3, r3, r28
/* 0B12A8 800B6848 7C7CE110 */  subfe   r3, r28, r28
/* 0B12AC 800B684C 7C6300D1 */  neg.    r3, r3
/* 0B12B0 800B6850 4182FFE0 */  beq     lbl_800B6830
/* 0B12B4 800B6854 806D922C */  lwz     r3, __memReg-_SDA_BASE_(r13)
/* 0B12B8 800B6858 38C3004E */  addi    r6, r3, 0x4e
/* 0B12BC 800B685C A083004E */  lhz     r4, 0x4e(r3)
/* 0B12C0 800B6860 38A30050 */  addi    r5, r3, 0x50
lbl_800B6864:
/* 0B12C4 800B6864 7C802378 */  mr      r0, r4
/* 0B12C8 800B6868 A0860000 */  lhz     r4, 0(r6)
/* 0B12CC 800B686C A0650000 */  lhz     r3, 0(r5)
/* 0B12D0 800B6870 7C040040 */  cmplw   r4, r0
/* 0B12D4 800B6874 4082FFF0 */  bne     lbl_800B6864
/* 0B12D8 800B6878 5480801E */  slwi    r0, r4, 0x10
/* 0B12DC 800B687C 7C001B78 */  or      r0, r0, r3
/* 0B12E0 800B6880 7C00D840 */  cmplw   r0, r27
/* 0B12E4 800B6884 7C1B0378 */  mr      r27, r0
/* 0B12E8 800B6888 4082FF90 */  bne     lbl_800B6818
lbl_800B688C:
/* 0B12EC 800B688C 3C60CC00 */  lis     r3, 0xcc00
/* 0B12F0 800B6890 38000001 */  li      r0, 1
/* 0B12F4 800B6894 3B633000 */  addi    r27, r3, 0x3000
/* 0B12F8 800B6898 941B0018 */  stwu    r0, 0x18(r27)
/* 0B12FC 800B689C 4BFF7481 */  bl      OSGetTime
/* 0B1300 800B68A0 38000000 */  li      r0, 0
/* 0B1304 800B68A4 3BE40000 */  addi    r31, r4, 0
/* 0B1308 800B68A8 3BC30000 */  addi    r30, r3, 0
/* 0B130C 800B68AC 6C1C8000 */  xoris   r28, r0, 0x8000
/* 0B1310 800B68B0 3BA00032 */  li      r29, 0x32
lbl_800B68B4:
/* 0B1314 800B68B4 4BFF7469 */  bl      OSGetTime
/* 0B1318 800B68B8 7C9F2010 */  subfc   r4, r31, r4
/* 0B131C 800B68BC 7C1E1910 */  subfe   r0, r30, r3
/* 0B1320 800B68C0 6C038000 */  xoris   r3, r0, 0x8000
/* 0B1324 800B68C4 7C04E810 */  subfc   r0, r4, r29
/* 0B1328 800B68C8 7C63E110 */  subfe   r3, r3, r28
/* 0B132C 800B68CC 7C7CE110 */  subfe   r3, r28, r28
/* 0B1330 800B68D0 7C6300D1 */  neg.    r3, r3
/* 0B1334 800B68D4 4182FFE0 */  beq     lbl_800B68B4
/* 0B1338 800B68D8 3BC00000 */  li      r30, 0
/* 0B133C 800B68DC 93DB0000 */  stw     r30, 0(r27)
/* 0B1340 800B68E0 4BFF743D */  bl      OSGetTime
/* 0B1344 800B68E4 3B840000 */  addi    r28, r4, 0
/* 0B1348 800B68E8 3BA30000 */  addi    r29, r3, 0
/* 0B134C 800B68EC 6FDF8000 */  xoris   r31, r30, 0x8000
/* 0B1350 800B68F0 3BC00005 */  li      r30, 5
lbl_800B68F4:
/* 0B1354 800B68F4 4BFF7429 */  bl      OSGetTime
/* 0B1358 800B68F8 7C9C2010 */  subfc   r4, r28, r4
/* 0B135C 800B68FC 7C1D1910 */  subfe   r0, r29, r3
/* 0B1360 800B6900 6C038000 */  xoris   r3, r0, 0x8000
/* 0B1364 800B6904 7C04F010 */  subfc   r0, r4, r30
/* 0B1368 800B6908 7C63F910 */  subfe   r3, r3, r31
/* 0B136C 800B690C 7C7FF910 */  subfe   r3, r31, r31
/* 0B1370 800B6910 7C6300D1 */  neg.    r3, r3
/* 0B1374 800B6914 4182FFE0 */  beq     lbl_800B68F4
/* 0B1378 800B6918 4BFFEDE9 */  bl      __GXCleanGPFifo
/* 0B137C 800B691C BB610014 */  lmw     r27, 0x14(r1)
/* 0B1380 800B6920 8001002C */  lwz     r0, 0x2c(r1)
/* 0B1384 800B6924 38210028 */  addi    r1, r1, 0x28
/* 0B1388 800B6928 7C0803A6 */  mtlr    r0
/* 0B138C 800B692C 4E800020 */  blr     

glabel GXSetDrawSync
/* 0B1390 800B6930 7C0802A6 */  mflr    r0
/* 0B1394 800B6934 90010004 */  stw     r0, 4(r1)
/* 0B1398 800B6938 9421FFE8 */  stwu    r1, -0x18(r1)
/* 0B139C 800B693C 93E10014 */  stw     r31, 0x14(r1)
/* 0B13A0 800B6940 93C10010 */  stw     r30, 0x10(r1)
/* 0B13A4 800B6944 7C7E1B78 */  mr      r30, r3
/* 0B13A8 800B6948 4BFF3E29 */  bl      OSDisableInterrupts
/* 0B13AC 800B694C 38C00061 */  li      r6, 0x61
/* 0B13B0 800B6950 808284B0 */  lwz     r4, __GXData-_SDA2_BASE_(r2)
/* 0B13B4 800B6954 3CA0CC01 */  lis     r5, 0xcc01
/* 0B13B8 800B6958 57C0043E */  clrlwi  r0, r30, 0x10
/* 0B13BC 800B695C 98C58000 */  stb     r6, -0x8000(r5)
/* 0B13C0 800B6960 64074800 */  oris    r7, r0, 0x4800
/* 0B13C4 800B6964 90E58000 */  stw     r7, -0x8000(r5)
/* 0B13C8 800B6968 53C7043E */  rlwimi  r7, r30, 0, 0x10, 0x1f
/* 0B13CC 800B696C 38000047 */  li      r0, 0x47
/* 0B13D0 800B6970 98C58000 */  stb     r6, -0x8000(r5)
/* 0B13D4 800B6974 5007C00E */  rlwimi  r7, r0, 0x18, 0, 7
/* 0B13D8 800B6978 7C7E1B78 */  mr      r30, r3
/* 0B13DC 800B697C 90E58000 */  stw     r7, -0x8000(r5)
/* 0B13E0 800B6980 800405AC */  lwz     r0, 0x5ac(r4)
/* 0B13E4 800B6984 28000000 */  cmplwi  r0, 0
/* 0B13E8 800B6988 41820008 */  beq     lbl_800B6990
/* 0B13EC 800B698C 480004ED */  bl      __GXSetDirtyState
lbl_800B6990:
/* 0B13F0 800B6990 3BE00000 */  li      r31, 0
/* 0B13F4 800B6994 3C60CC01 */  lis     r3, 0xcc01
/* 0B13F8 800B6998 93E38000 */  stw     r31, -0x8000(r3)
/* 0B13FC 800B699C 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1400 800B69A0 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1404 800B69A4 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1408 800B69A8 93E38000 */  stw     r31, -0x8000(r3)
/* 0B140C 800B69AC 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1410 800B69B0 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1414 800B69B4 93E38000 */  stw     r31, -0x8000(r3)
/* 0B1418 800B69B8 4BFF0BB1 */  bl      PPCSync
/* 0B141C 800B69BC 7FC3F378 */  mr      r3, r30
/* 0B1420 800B69C0 4BFF3DD9 */  bl      OSRestoreInterrupts
/* 0B1424 800B69C4 806284B0 */  lwz     r3, __GXData-_SDA2_BASE_(r2)
/* 0B1428 800B69C8 B3E30002 */  sth     r31, 2(r3)
/* 0B142C 800B69CC 8001001C */  lwz     r0, 0x1c(r1)
/* 0B1430 800B69D0 83E10014 */  lwz     r31, 0x14(r1)
/* 0B1434 800B69D4 83C10010 */  lwz     r30, 0x10(r1)
/* 0B1438 800B69D8 38210018 */  addi    r1, r1, 0x18
/* 0B143C 800B69DC 7C0803A6 */  mtlr    r0
/* 0B1440 800B69E0 4E800020 */  blr     

glabel GXReadDrawSync
/* 0B1444 800B69E4 806D9228 */  lwz     r3, __peReg-_SDA_BASE_(r13)
/* 0B1448 800B69E8 A063000E */  lhz     r3, 0xe(r3)
/* 0B144C 800B69EC 4E800020 */  blr     

glabel GXSetDrawDone
/* 0B1450 800B69F0 7C0802A6 */  mflr    r0
/* 0B1454 800B69F4 90010004 */  stw     r0, 4(r1)
/* 0B1458 800B69F8 9421FFE8 */  stwu    r1, -0x18(r1)
/* 0B145C 800B69FC 93E10014 */  stw     r31, 0x14(r1)
/* 0B1460 800B6A00 93C10010 */  stw     r30, 0x10(r1)
/* 0B1464 800B6A04 4BFF3D6D */  bl      OSDisableInterrupts
/* 0B1468 800B6A08 38000061 */  li      r0, 0x61
/* 0B146C 800B6A0C 808284B0 */  lwz     r4, __GXData-_SDA2_BASE_(r2)
/* 0B1470 800B6A10 3CC0CC01 */  lis     r6, 0xcc01
/* 0B1474 800B6A14 3CA04500 */  lis     r5, 0x4500
/* 0B1478 800B6A18 98068000 */  stb     r0, -0x8000(r6)
/* 0B147C 800B6A1C 38050002 */  addi    r0, r5, 2
/* 0B1480 800B6A20 90068000 */  stw     r0, -0x8000(r6)
/* 0B1484 800B6A24 7C7E1B78 */  mr      r30, r3
/* 0B1488 800B6A28 800405AC */  lwz     r0, 0x5ac(r4)
/* 0B148C 800B6A2C 28000000 */  cmplwi  r0, 0
/* 0B1490 800B6A30 41820008 */  beq     lbl_800B6A38
/* 0B1494 800B6A34 48000445 */  bl      __GXSetDirtyState
lbl_800B6A38:
/* 0B1498 800B6A38 3BE00000 */  li      r31, 0
/* 0B149C 800B6A3C 3C60CC01 */  lis     r3, 0xcc01
/* 0B14A0 800B6A40 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14A4 800B6A44 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14A8 800B6A48 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14AC 800B6A4C 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14B0 800B6A50 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14B4 800B6A54 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14B8 800B6A58 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14BC 800B6A5C 93E38000 */  stw     r31, -0x8000(r3)
/* 0B14C0 800B6A60 4BFF0B09 */  bl      PPCSync
/* 0B14C4 800B6A64 9BED9270 */  stb     r31, DrawDone-_SDA_BASE_(r13)
/* 0B14C8 800B6A68 7FC3F378 */  mr      r3, r30
/* 0B14CC 800B6A6C 4BFF3D2D */  bl      OSRestoreInterrupts
/* 0B14D0 800B6A70 8001001C */  lwz     r0, 0x1c(r1)
/* 0B14D4 800B6A74 83E10014 */  lwz     r31, 0x14(r1)
/* 0B14D8 800B6A78 83C10010 */  lwz     r30, 0x10(r1)
/* 0B14DC 800B6A7C 38210018 */  addi    r1, r1, 0x18
/* 0B14E0 800B6A80 7C0803A6 */  mtlr    r0
/* 0B14E4 800B6A84 4E800020 */  blr     

glabel GXDrawDone
/* 0B14E8 800B6A88 7C0802A6 */  mflr    r0
/* 0B14EC 800B6A8C 90010004 */  stw     r0, 4(r1)
/* 0B14F0 800B6A90 9421FFE8 */  stwu    r1, -0x18(r1)
/* 0B14F4 800B6A94 93E10014 */  stw     r31, 0x14(r1)
/* 0B14F8 800B6A98 4BFF3CD9 */  bl      OSDisableInterrupts
/* 0B14FC 800B6A9C 38000061 */  li      r0, 0x61
/* 0B1500 800B6AA0 3CA0CC01 */  lis     r5, 0xcc01
/* 0B1504 800B6AA4 3C804500 */  lis     r4, 0x4500
/* 0B1508 800B6AA8 98058000 */  stb     r0, -0x8000(r5)
/* 0B150C 800B6AAC 38040002 */  addi    r0, r4, 2
/* 0B1510 800B6AB0 90058000 */  stw     r0, -0x8000(r5)
/* 0B1514 800B6AB4 7C7F1B78 */  mr      r31, r3
/* 0B1518 800B6AB8 4BFFFB41 */  bl      GXFlush
/* 0B151C 800B6ABC 38000000 */  li      r0, 0
/* 0B1520 800B6AC0 980D9270 */  stb     r0, DrawDone-_SDA_BASE_(r13)
/* 0B1524 800B6AC4 7FE3FB78 */  mr      r3, r31
/* 0B1528 800B6AC8 4BFF3CD1 */  bl      OSRestoreInterrupts
/* 0B152C 800B6ACC 4BFF3CA5 */  bl      OSDisableInterrupts
/* 0B1530 800B6AD0 7C7F1B78 */  mr      r31, r3
/* 0B1534 800B6AD4 4800000C */  b       lbl_800B6AE0
lbl_800B6AD8:
/* 0B1538 800B6AD8 386D9274 */  addi    r3, r13, FinishQueue-_SDA_BASE_
/* 0B153C 800B6ADC 4BFF6FA5 */  bl      OSSleepThread
lbl_800B6AE0:
/* 0B1540 800B6AE0 880D9270 */  lbz     r0, DrawDone-_SDA_BASE_(r13)
/* 0B1544 800B6AE4 28000000 */  cmplwi  r0, 0
/* 0B1548 800B6AE8 4182FFF0 */  beq     lbl_800B6AD8
/* 0B154C 800B6AEC 7FE3FB78 */  mr      r3, r31
/* 0B1550 800B6AF0 4BFF3CA9 */  bl      OSRestoreInterrupts
/* 0B1554 800B6AF4 8001001C */  lwz     r0, 0x1c(r1)
/* 0B1558 800B6AF8 83E10014 */  lwz     r31, 0x14(r1)
/* 0B155C 800B6AFC 38210018 */  addi    r1, r1, 0x18
/* 0B1560 800B6B00 7C0803A6 */  mtlr    r0
/* 0B1564 800B6B04 4E800020 */  blr     

glabel GXPixModeSync
/* 0B1568 800B6B08 38000061 */  li      r0, 0x61
/* 0B156C 800B6B0C 808284B0 */  lwz     r4, __GXData-_SDA2_BASE_(r2)
/* 0B1570 800B6B10 3CA0CC01 */  lis     r5, 0xcc01
/* 0B1574 800B6B14 98058000 */  stb     r0, -0x8000(r5)
/* 0B1578 800B6B18 38000000 */  li      r0, 0
/* 0B157C 800B6B1C 806401DC */  lwz     r3, 0x1dc(r4)
/* 0B1580 800B6B20 90658000 */  stw     r3, -0x8000(r5)
/* 0B1584 800B6B24 B0040002 */  sth     r0, 2(r4)
/* 0B1588 800B6B28 4E800020 */  blr     

glabel GXPokeAlphaMode
/* 0B158C 800B6B2C 80AD9228 */  lwz     r5, __peReg-_SDA_BASE_(r13)
/* 0B1590 800B6B30 5480063E */  clrlwi  r0, r4, 0x18
/* 0B1594 800B6B34 5060402E */  rlwimi  r0, r3, 8, 0, 0x17
/* 0B1598 800B6B38 B0050006 */  sth     r0, 6(r5)
/* 0B159C 800B6B3C 4E800020 */  blr     

glabel GXPokeAlphaRead
/* 0B15A0 800B6B40 38A00000 */  li      r5, 0
/* 0B15A4 800B6B44 808D9228 */  lwz     r4, __peReg-_SDA_BASE_(r13)
/* 0B15A8 800B6B48 506507BE */  rlwimi  r5, r3, 0, 0x1e, 0x1f
/* 0B15AC 800B6B4C 38000001 */  li      r0, 1
/* 0B15B0 800B6B50 38650000 */  addi    r3, r5, 0
/* 0B15B4 800B6B54 5003177A */  rlwimi  r3, r0, 2, 0x1d, 0x1d
/* 0B15B8 800B6B58 B0640008 */  sth     r3, 8(r4)
/* 0B15BC 800B6B5C 4E800020 */  blr     

glabel GXPokeAlphaUpdate
/* 0B15C0 800B6B60 808D9228 */  lwz     r4, __peReg-_SDA_BASE_(r13)
/* 0B15C4 800B6B64 5460063E */  clrlwi  r0, r3, 0x18
/* 0B15C8 800B6B68 A0640002 */  lhz     r3, 2(r4)
/* 0B15CC 800B6B6C 500326F6 */  rlwimi  r3, r0, 4, 0x1b, 0x1b
/* 0B15D0 800B6B70 B0640002 */  sth     r3, 2(r4)
/* 0B15D4 800B6B74 4E800020 */  blr     

glabel GXPokeBlendMode
/* 0B15D8 800B6B78 80ED9228 */  lwz     r7, __peReg-_SDA_BASE_(r13)
/* 0B15DC 800B6B7C 2C030001 */  cmpwi   r3, 1
/* 0B15E0 800B6B80 39200001 */  li      r9, 1
/* 0B15E4 800B6B84 A1470002 */  lhz     r10, 2(r7)
/* 0B15E8 800B6B88 41820010 */  beq     lbl_800B6B98
/* 0B15EC 800B6B8C 2C030003 */  cmpwi   r3, 3
/* 0B15F0 800B6B90 41820008 */  beq     lbl_800B6B98
/* 0B15F4 800B6B94 39200000 */  li      r9, 0
lbl_800B6B98:
/* 0B15F8 800B6B98 20030003 */  subfic  r0, r3, 3
/* 0B15FC 800B6B9C 80ED9228 */  lwz     r7, __peReg-_SDA_BASE_(r13)
/* 0B1600 800B6BA0 7C080034 */  cntlzw  r8, r0
/* 0B1604 800B6BA4 20030002 */  subfic  r0, r3, 2
/* 0B1608 800B6BA8 512A07FE */  rlwimi  r10, r9, 0, 0x1f, 0x1f
/* 0B160C 800B6BAC 5503D97E */  srwi    r3, r8, 5
/* 0B1610 800B6BB0 390A0000 */  addi    r8, r10, 0
/* 0B1614 800B6BB4 7C000034 */  cntlzw  r0, r0
/* 0B1618 800B6BB8 50685D28 */  rlwimi  r8, r3, 0xb, 0x14, 0x14
/* 0B161C 800B6BBC 5008E7BC */  rlwimi  r8, r0, 0x1c, 0x1e, 0x1e
/* 0B1620 800B6BC0 50C86426 */  rlwimi  r8, r6, 0xc, 0x10, 0x13
/* 0B1624 800B6BC4 5088456E */  rlwimi  r8, r4, 8, 0x15, 0x17
/* 0B1628 800B6BC8 38000041 */  li      r0, 0x41
/* 0B162C 800B6BCC 50A82E34 */  rlwimi  r8, r5, 5, 0x18, 0x1a
/* 0B1630 800B6BD0 5008C00E */  rlwimi  r8, r0, 0x18, 0, 7
/* 0B1634 800B6BD4 B1070002 */  sth     r8, 2(r7)
/* 0B1638 800B6BD8 4E800020 */  blr     

glabel GXPokeColorUpdate
/* 0B163C 800B6BDC 808D9228 */  lwz     r4, __peReg-_SDA_BASE_(r13)
/* 0B1640 800B6BE0 5460063E */  clrlwi  r0, r3, 0x18
/* 0B1644 800B6BE4 A0640002 */  lhz     r3, 2(r4)
/* 0B1648 800B6BE8 50031F38 */  rlwimi  r3, r0, 3, 0x1c, 0x1c
/* 0B164C 800B6BEC B0640002 */  sth     r3, 2(r4)
/* 0B1650 800B6BF0 4E800020 */  blr     

glabel GXPokeDstAlpha
/* 0B1654 800B6BF4 5480063E */  clrlwi  r0, r4, 0x18
/* 0B1658 800B6BF8 808D9228 */  lwz     r4, __peReg-_SDA_BASE_(r13)
/* 0B165C 800B6BFC 38A00000 */  li      r5, 0
/* 0B1660 800B6C00 5005063E */  rlwimi  r5, r0, 0, 0x18, 0x1f
/* 0B1664 800B6C04 5460063E */  clrlwi  r0, r3, 0x18
/* 0B1668 800B6C08 38650000 */  addi    r3, r5, 0
/* 0B166C 800B6C0C 500345EE */  rlwimi  r3, r0, 8, 0x17, 0x17
/* 0B1670 800B6C10 B0640004 */  sth     r3, 4(r4)
/* 0B1674 800B6C14 4E800020 */  blr     

glabel GXPokeDither
/* 0B1678 800B6C18 808D9228 */  lwz     r4, __peReg-_SDA_BASE_(r13)
/* 0B167C 800B6C1C 5460063E */  clrlwi  r0, r3, 0x18
/* 0B1680 800B6C20 A0640002 */  lhz     r3, 2(r4)
/* 0B1684 800B6C24 5003177A */  rlwimi  r3, r0, 2, 0x1d, 0x1d
/* 0B1688 800B6C28 B0640002 */  sth     r3, 2(r4)
/* 0B168C 800B6C2C 4E800020 */  blr     

glabel GXPokeZMode
/* 0B1690 800B6C30 5460063E */  clrlwi  r0, r3, 0x18
/* 0B1694 800B6C34 806D9228 */  lwz     r3, __peReg-_SDA_BASE_(r13)
/* 0B1698 800B6C38 38C00000 */  li      r6, 0
/* 0B169C 800B6C3C 500607FE */  rlwimi  r6, r0, 0, 0x1f, 0x1f
/* 0B16A0 800B6C40 50860F3C */  rlwimi  r6, r4, 1, 0x1c, 0x1e
/* 0B16A4 800B6C44 50A626F6 */  rlwimi  r6, r5, 4, 0x1b, 0x1b
/* 0B16A8 800B6C48 B0C30000 */  sth     r6, 0(r3)
/* 0B16AC 800B6C4C 4E800020 */  blr     

glabel GXPeekZ
/* 0B16B0 800B6C50 5460043E */  clrlwi  r0, r3, 0x10
/* 0B16B4 800B6C54 3C60C800 */  lis     r3, 0xc800
/* 0B16B8 800B6C58 5003153A */  rlwimi  r3, r0, 2, 0x14, 0x1d
/* 0B16BC 800B6C5C 38000001 */  li      r0, 1
/* 0B16C0 800B6C60 508362A6 */  rlwimi  r3, r4, 0xc, 0xa, 0x13
/* 0B16C4 800B6C64 5003B212 */  rlwimi  r3, r0, 0x16, 8, 9
/* 0B16C8 800B6C68 80030000 */  lwz     r0, 0(r3)
/* 0B16CC 800B6C6C 90050000 */  stw     r0, 0(r5)
/* 0B16D0 800B6C70 4E800020 */  blr     

glabel GXSetDrawSyncCallback
/* 0B16D4 800B6C74 7C0802A6 */  mflr    r0
/* 0B16D8 800B6C78 90010004 */  stw     r0, 4(r1)
/* 0B16DC 800B6C7C 9421FFE8 */  stwu    r1, -0x18(r1)
/* 0B16E0 800B6C80 93E10014 */  stw     r31, 0x14(r1)
/* 0B16E4 800B6C84 93C10010 */  stw     r30, 0x10(r1)
/* 0B16E8 800B6C88 7C7E1B78 */  mr      r30, r3
/* 0B16EC 800B6C8C 83ED9268 */  lwz     r31, TokenCB-_SDA_BASE_(r13)
/* 0B16F0 800B6C90 4BFF3AE1 */  bl      OSDisableInterrupts
/* 0B16F4 800B6C94 93CD9268 */  stw     r30, TokenCB-_SDA_BASE_(r13)
/* 0B16F8 800B6C98 4BFF3B01 */  bl      OSRestoreInterrupts
/* 0B16FC 800B6C9C 7FE3FB78 */  mr      r3, r31
/* 0B1700 800B6CA0 8001001C */  lwz     r0, 0x1c(r1)
/* 0B1704 800B6CA4 83E10014 */  lwz     r31, 0x14(r1)
/* 0B1708 800B6CA8 83C10010 */  lwz     r30, 0x10(r1)
/* 0B170C 800B6CAC 38210018 */  addi    r1, r1, 0x18
/* 0B1710 800B6CB0 7C0803A6 */  mtlr    r0
/* 0B1714 800B6CB4 4E800020 */  blr     

GXTokenInterruptHandler:
/* 0B1718 800B6CB8 7C0802A6 */  mflr    r0
/* 0B171C 800B6CBC 90010004 */  stw     r0, 4(r1)
/* 0B1720 800B6CC0 9421FD20 */  stwu    r1, -0x2e0(r1)
/* 0B1724 800B6CC4 93E102DC */  stw     r31, 0x2dc(r1)
/* 0B1728 800B6CC8 93C102D8 */  stw     r30, 0x2d8(r1)
/* 0B172C 800B6CCC 7C9E2378 */  mr      r30, r4
/* 0B1730 800B6CD0 800D9268 */  lwz     r0, TokenCB-_SDA_BASE_(r13)
/* 0B1734 800B6CD4 806D9228 */  lwz     r3, __peReg-_SDA_BASE_(r13)
/* 0B1738 800B6CD8 28000000 */  cmplwi  r0, 0
/* 0B173C 800B6CDC A3E3000E */  lhz     r31, 0xe(r3)
/* 0B1740 800B6CE0 41820034 */  beq     lbl_800B6D14
/* 0B1744 800B6CE4 38610010 */  addi    r3, r1, 0x10
/* 0B1748 800B6CE8 4BFF2F31 */  bl      OSClearContext
/* 0B174C 800B6CEC 38610010 */  addi    r3, r1, 0x10
/* 0B1750 800B6CF0 4BFF2D61 */  bl      OSSetCurrentContext
/* 0B1754 800B6CF4 818D9268 */  lwz     r12, TokenCB-_SDA_BASE_(r13)
/* 0B1758 800B6CF8 387F0000 */  addi    r3, r31, 0
/* 0B175C 800B6CFC 7D8803A6 */  mtlr    r12
/* 0B1760 800B6D00 4E800021 */  blrl    
/* 0B1764 800B6D04 38610010 */  addi    r3, r1, 0x10
/* 0B1768 800B6D08 4BFF2F11 */  bl      OSClearContext
/* 0B176C 800B6D0C 7FC3F378 */  mr      r3, r30
/* 0B1770 800B6D10 4BFF2D41 */  bl      OSSetCurrentContext
lbl_800B6D14:
/* 0B1774 800B6D14 806D9228 */  lwz     r3, __peReg-_SDA_BASE_(r13)
/* 0B1778 800B6D18 38000001 */  li      r0, 1
/* 0B177C 800B6D1C A083000A */  lhz     r4, 0xa(r3)
/* 0B1780 800B6D20 5004177A */  rlwimi  r4, r0, 2, 0x1d, 0x1d
/* 0B1784 800B6D24 B083000A */  sth     r4, 0xa(r3)
/* 0B1788 800B6D28 800102E4 */  lwz     r0, 0x2e4(r1)
/* 0B178C 800B6D2C 83E102DC */  lwz     r31, 0x2dc(r1)
/* 0B1790 800B6D30 83C102D8 */  lwz     r30, 0x2d8(r1)
/* 0B1794 800B6D34 382102E0 */  addi    r1, r1, 0x2e0
/* 0B1798 800B6D38 7C0803A6 */  mtlr    r0
/* 0B179C 800B6D3C 4E800020 */  blr     

glabel GXSetDrawDoneCallback
/* 0B17A0 800B6D40 7C0802A6 */  mflr    r0
/* 0B17A4 800B6D44 90010004 */  stw     r0, 4(r1)
/* 0B17A8 800B6D48 9421FFE8 */  stwu    r1, -0x18(r1)
/* 0B17AC 800B6D4C 93E10014 */  stw     r31, 0x14(r1)
/* 0B17B0 800B6D50 93C10010 */  stw     r30, 0x10(r1)
/* 0B17B4 800B6D54 7C7E1B78 */  mr      r30, r3
/* 0B17B8 800B6D58 83ED926C */  lwz     r31, DrawDoneCB-_SDA_BASE_(r13)
/* 0B17BC 800B6D5C 4BFF3A15 */  bl      OSDisableInterrupts
/* 0B17C0 800B6D60 93CD926C */  stw     r30, DrawDoneCB-_SDA_BASE_(r13)
/* 0B17C4 800B6D64 4BFF3A35 */  bl      OSRestoreInterrupts
/* 0B17C8 800B6D68 7FE3FB78 */  mr      r3, r31
/* 0B17CC 800B6D6C 8001001C */  lwz     r0, 0x1c(r1)
/* 0B17D0 800B6D70 83E10014 */  lwz     r31, 0x14(r1)
/* 0B17D4 800B6D74 83C10010 */  lwz     r30, 0x10(r1)
/* 0B17D8 800B6D78 38210018 */  addi    r1, r1, 0x18
/* 0B17DC 800B6D7C 7C0803A6 */  mtlr    r0
/* 0B17E0 800B6D80 4E800020 */  blr     

GXFinishInterruptHandler:
/* 0B17E4 800B6D84 7C0802A6 */  mflr    r0
/* 0B17E8 800B6D88 38600001 */  li      r3, 1
/* 0B17EC 800B6D8C 90010004 */  stw     r0, 4(r1)
/* 0B17F0 800B6D90 9421FD20 */  stwu    r1, -0x2e0(r1)
/* 0B17F4 800B6D94 93E102DC */  stw     r31, 0x2dc(r1)
/* 0B17F8 800B6D98 3BE40000 */  addi    r31, r4, 0
/* 0B17FC 800B6D9C 80AD9228 */  lwz     r5, __peReg-_SDA_BASE_(r13)
/* 0B1800 800B6DA0 A005000A */  lhz     r0, 0xa(r5)
/* 0B1804 800B6DA4 50601F38 */  rlwimi  r0, r3, 3, 0x1c, 0x1c
/* 0B1808 800B6DA8 B005000A */  sth     r0, 0xa(r5)
/* 0B180C 800B6DAC 800D926C */  lwz     r0, DrawDoneCB-_SDA_BASE_(r13)
/* 0B1810 800B6DB0 986D9270 */  stb     r3, DrawDone-_SDA_BASE_(r13)
/* 0B1814 800B6DB4 28000000 */  cmplwi  r0, 0
/* 0B1818 800B6DB8 41820030 */  beq     lbl_800B6DE8
/* 0B181C 800B6DBC 38610010 */  addi    r3, r1, 0x10
/* 0B1820 800B6DC0 4BFF2E59 */  bl      OSClearContext
/* 0B1824 800B6DC4 38610010 */  addi    r3, r1, 0x10
/* 0B1828 800B6DC8 4BFF2C89 */  bl      OSSetCurrentContext
/* 0B182C 800B6DCC 818D926C */  lwz     r12, DrawDoneCB-_SDA_BASE_(r13)
/* 0B1830 800B6DD0 7D8803A6 */  mtlr    r12
/* 0B1834 800B6DD4 4E800021 */  blrl    
/* 0B1838 800B6DD8 38610010 */  addi    r3, r1, 0x10
/* 0B183C 800B6DDC 4BFF2E3D */  bl      OSClearContext
/* 0B1840 800B6DE0 7FE3FB78 */  mr      r3, r31
/* 0B1844 800B6DE4 4BFF2C6D */  bl      OSSetCurrentContext
lbl_800B6DE8:
/* 0B1848 800B6DE8 386D9274 */  addi    r3, r13, FinishQueue-_SDA_BASE_
/* 0B184C 800B6DEC 4BFF6D81 */  bl      OSWakeupThread
/* 0B1850 800B6DF0 800102E4 */  lwz     r0, 0x2e4(r1)
/* 0B1854 800B6DF4 83E102DC */  lwz     r31, 0x2dc(r1)
/* 0B1858 800B6DF8 382102E0 */  addi    r1, r1, 0x2e0
/* 0B185C 800B6DFC 7C0803A6 */  mtlr    r0
/* 0B1860 800B6E00 4E800020 */  blr     

glabel __GXPEInit
/* 0B1864 800B6E04 7C0802A6 */  mflr    r0
/* 0B1868 800B6E08 3C60800B */  lis     r3, GXTokenInterruptHandler@ha
/* 0B186C 800B6E0C 90010004 */  stw     r0, 4(r1)
/* 0B1870 800B6E10 38836CB8 */  addi    r4, r3, GXTokenInterruptHandler@l
/* 0B1874 800B6E14 38600012 */  li      r3, 0x12
/* 0B1878 800B6E18 9421FFF8 */  stwu    r1, -8(r1)
/* 0B187C 800B6E1C 4BFF39A1 */  bl      __OSSetInterruptHandler
/* 0B1880 800B6E20 3C60800B */  lis     r3, GXFinishInterruptHandler@ha
/* 0B1884 800B6E24 38836D84 */  addi    r4, r3, GXFinishInterruptHandler@l
/* 0B1888 800B6E28 38600013 */  li      r3, 0x13
/* 0B188C 800B6E2C 4BFF3991 */  bl      __OSSetInterruptHandler
/* 0B1890 800B6E30 386D9274 */  addi    r3, r13, FinishQueue-_SDA_BASE_
/* 0B1894 800B6E34 4BFF5E75 */  bl      OSInitThreadQueue
/* 0B1898 800B6E38 38602000 */  li      r3, 0x2000
/* 0B189C 800B6E3C 4BFF3D85 */  bl      __OSUnmaskInterrupts
/* 0B18A0 800B6E40 38601000 */  li      r3, 0x1000
/* 0B18A4 800B6E44 4BFF3D7D */  bl      __OSUnmaskInterrupts
/* 0B18A8 800B6E48 806D9228 */  lwz     r3, __peReg-_SDA_BASE_(r13)
/* 0B18AC 800B6E4C 38000001 */  li      r0, 1
/* 0B18B0 800B6E50 A083000A */  lhz     r4, 0xa(r3)
/* 0B18B4 800B6E54 5004177A */  rlwimi  r4, r0, 2, 0x1d, 0x1d
/* 0B18B8 800B6E58 50041F38 */  rlwimi  r4, r0, 3, 0x1c, 0x1c
/* 0B18BC 800B6E5C 500407FE */  rlwimi  r4, r0, 0, 0x1f, 0x1f
/* 0B18C0 800B6E60 50040FBC */  rlwimi  r4, r0, 1, 0x1e, 0x1e
/* 0B18C4 800B6E64 B083000A */  sth     r4, 0xa(r3)
/* 0B18C8 800B6E68 8001000C */  lwz     r0, 0xc(r1)
/* 0B18CC 800B6E6C 38210008 */  addi    r1, r1, 8
/* 0B18D0 800B6E70 7C0803A6 */  mtlr    r0
/* 0B18D4 800B6E74 4E800020 */  blr     


.section .sbss, "wa"

.balign 8

/* 001004A8 80145C48 0004 */
TokenCB:
    .skip 4

.balign 4

/* 001004AC 80145C4C 0004 */
DrawDoneCB:
    .skip 4

.balign 4

/* 001004B0 80145C50 0001 */
DrawDone:
    .skip 1

.balign 4

/* 001004B4 80145C54 0008 */
FinishQueue:
    .skip 8


